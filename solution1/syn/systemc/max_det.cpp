// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_det.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_det::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_det::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> max_det::ap_ST_fsm_state1 = "1";
const sc_lv<11> max_det::ap_ST_fsm_state2 = "10";
const sc_lv<11> max_det::ap_ST_fsm_state3 = "100";
const sc_lv<11> max_det::ap_ST_fsm_state4 = "1000";
const sc_lv<11> max_det::ap_ST_fsm_state5 = "10000";
const sc_lv<11> max_det::ap_ST_fsm_state6 = "100000";
const sc_lv<11> max_det::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> max_det::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> max_det::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> max_det::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> max_det::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> max_det::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> max_det::ap_const_lv1_0 = "0";
const sc_lv<1> max_det::ap_const_lv1_1 = "1";
const sc_lv<2> max_det::ap_const_lv2_0 = "00";
const sc_lv<2> max_det::ap_const_lv2_2 = "10";
const sc_lv<2> max_det::ap_const_lv2_3 = "11";
const sc_lv<2> max_det::ap_const_lv2_1 = "1";
const sc_lv<26> max_det::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<32> max_det::ap_const_lv32_1 = "1";
const sc_lv<32> max_det::ap_const_lv32_8 = "1000";
const sc_lv<32> max_det::ap_const_lv32_9 = "1001";
const int max_det::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> max_det::ap_const_lv32_7 = "111";
const sc_lv<4> max_det::ap_const_lv4_0 = "0000";
const sc_lv<32> max_det::ap_const_lv32_6 = "110";
const sc_lv<64> max_det::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> max_det::ap_const_lv64_1 = "1";
const sc_lv<64> max_det::ap_const_lv64_2 = "10";
const sc_lv<32> max_det::ap_const_lv32_2 = "10";
const sc_lv<64> max_det::ap_const_lv64_3 = "11";
const sc_lv<64> max_det::ap_const_lv64_4 = "100";
const sc_lv<32> max_det::ap_const_lv32_3 = "11";
const sc_lv<64> max_det::ap_const_lv64_5 = "101";
const sc_lv<64> max_det::ap_const_lv64_6 = "110";
const sc_lv<32> max_det::ap_const_lv32_4 = "100";
const sc_lv<64> max_det::ap_const_lv64_7 = "111";
const sc_lv<64> max_det::ap_const_lv64_8 = "1000";
const sc_lv<32> max_det::ap_const_lv32_5 = "101";
const sc_lv<64> max_det::ap_const_lv64_9 = "1001";
const sc_lv<64> max_det::ap_const_lv64_A = "1010";
const sc_lv<64> max_det::ap_const_lv64_B = "1011";
const sc_lv<32> max_det::ap_const_lv32_A = "1010";
const sc_lv<32> max_det::ap_const_lv32_61A8 = "110000110101000";
const sc_lv<4> max_det::ap_const_lv4_C = "1100";
const sc_lv<4> max_det::ap_const_lv4_1 = "1";
const bool max_det::ap_const_boolean_1 = true;

max_det::max_det(sc_module_name name) : sc_module(name), mVcdFile(0) {
    max_det_AXILiteS_s_axi_U = new max_det_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("max_det_AXILiteS_s_axi_U");
    max_det_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    max_det_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    max_det_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    max_det_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    max_det_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    max_det_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    max_det_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    max_det_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    max_det_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    max_det_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    max_det_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    max_det_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    max_det_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    max_det_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    max_det_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    max_det_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    max_det_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    max_det_AXILiteS_s_axi_U->ACLK(ap_clk);
    max_det_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    max_det_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    max_det_AXILiteS_s_axi_U->ap_start(ap_start);
    max_det_AXILiteS_s_axi_U->interrupt(interrupt);
    max_det_AXILiteS_s_axi_U->ap_ready(ap_ready);
    max_det_AXILiteS_s_axi_U->ap_done(ap_done);
    max_det_AXILiteS_s_axi_U->ap_idle(ap_idle);
    peaks_V_U = new max_det_peaks_V("peaks_V_U");
    peaks_V_U->clk(ap_clk);
    peaks_V_U->reset(ap_rst_n_inv);
    peaks_V_U->address0(peaks_V_address0);
    peaks_V_U->ce0(peaks_V_ce0);
    peaks_V_U->we0(peaks_V_we0);
    peaks_V_U->d0(peaks_V_d0);
    peaks_V_U->q0(peaks_V_q0);
    peaks_V_U->address1(peaks_V_address1);
    peaks_V_U->ce1(peaks_V_ce1);
    peaks_V_U->we1(peaks_V_we1);
    peaks_V_U->d1(peaks_V_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );

    SC_METHOD(thread_ap_done);
    sensitive << ( out_peaks_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_comp_vsum_1_V_flag_1_phi_fu_334_p4);
    sensitive << ( comp_vsum_1_V_flag_1_reg_330 );

    SC_METHOD(thread_ap_phi_mux_comp_vsum_2_V_flag_1_phi_fu_389_p4);
    sensitive << ( comp_vsum_2_V_flag_1_reg_385 );

    SC_METHOD(thread_ap_phi_mux_comp_vsum_3_V_flag_1_phi_fu_444_p4);
    sensitive << ( comp_vsum_3_V_flag_1_reg_440 );

    SC_METHOD(thread_ap_phi_mux_comp_vsum_4_V_flag_1_phi_fu_499_p4);
    sensitive << ( comp_vsum_4_V_flag_1_reg_495 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_peaks_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond_fu_891_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_reg_319 );

    SC_METHOD(thread_i_1_fu_897_p2);
    sensitive << ( i_reg_319 );

    SC_METHOD(thread_out_peaks_V_1_ack_in);
    sensitive << ( out_peaks_V_1_state );

    SC_METHOD(thread_out_peaks_V_1_ack_out);
    sensitive << ( out_peaks_V_TREADY );

    SC_METHOD(thread_out_peaks_V_1_data_out);
    sensitive << ( out_peaks_V_1_payload_A );
    sensitive << ( out_peaks_V_1_payload_B );
    sensitive << ( out_peaks_V_1_sel );

    SC_METHOD(thread_out_peaks_V_1_load_A);
    sensitive << ( out_peaks_V_1_sel_wr );
    sensitive << ( out_peaks_V_1_state_cmp_full );

    SC_METHOD(thread_out_peaks_V_1_load_B);
    sensitive << ( out_peaks_V_1_sel_wr );
    sensitive << ( out_peaks_V_1_state_cmp_full );

    SC_METHOD(thread_out_peaks_V_1_sel);
    sensitive << ( out_peaks_V_1_sel_rd );

    SC_METHOD(thread_out_peaks_V_1_state_cmp_full);
    sensitive << ( out_peaks_V_1_state );

    SC_METHOD(thread_out_peaks_V_1_vld_in);
    sensitive << ( out_peaks_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_peaks_V_1_vld_out);
    sensitive << ( out_peaks_V_1_state );

    SC_METHOD(thread_out_peaks_V_TDATA);
    sensitive << ( out_peaks_V_1_data_out );

    SC_METHOD(thread_out_peaks_V_TDATA_blk_n);
    sensitive << ( out_peaks_V_1_state );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_out_peaks_V_TVALID);
    sensitive << ( out_peaks_V_1_state );

    SC_METHOD(thread_peaks_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_8_fu_903_p1 );

    SC_METHOD(thread_peaks_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_peaks_V_ce0);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_peaks_V_ce1);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_peaks_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vbt_test_1_V_comp_s_reg_1085 );
    sensitive << ( vlr_test_2_V_comp_s_reg_1105 );
    sensitive << ( vsum_i_3_V_1_comp_s_reg_1125 );
    sensitive << ( vbt_test_3_V_comp_s_reg_1135 );
    sensitive << ( vlr_test_4_V_comp_s_reg_1155 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( vsum_i_1_V_1_comp_s_fu_651_p3 );

    SC_METHOD(thread_peaks_V_d1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_2_V_1_comp_s_reg_1100 );
    sensitive << ( vbt_test_2_V_comp_s_reg_1110 );
    sensitive << ( vlr_test_3_V_comp_s_reg_1130 );
    sensitive << ( vsum_i_4_V_1_comp_s_reg_1150 );
    sensitive << ( vbt_test_4_V_comp_s_reg_1160 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( vlr_test_1_V_comp_s_fu_660_p3 );

    SC_METHOD(thread_peaks_V_we0);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_7_fu_885_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_peaks_V_we1);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_7_fu_885_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_10_fu_908_p1);
    sensitive << ( peaks_V_q0 );

    SC_METHOD(thread_tmp_1_fu_767_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( comp_vsum_3_V );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_3_V_2_Val2_s_fu_755_p3 );

    SC_METHOD(thread_tmp_2_fu_809_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_4_V_2_fu_597_p1 );

    SC_METHOD(thread_tmp_3_fu_833_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( comp_vsum_4_V );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_4_V_2_Val2_s_fu_821_p3 );

    SC_METHOD(thread_tmp_4_fu_633_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( comp_vsum_1_V );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_test_1_V_1_fu_621_p3 );

    SC_METHOD(thread_tmp_5_fu_677_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_2_V_2_fu_573_p1 );

    SC_METHOD(thread_tmp_6_fu_879_p2);
    sensitive << ( contador );

    SC_METHOD(thread_tmp_7_fu_885_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_6_fu_879_p2 );

    SC_METHOD(thread_tmp_8_fu_903_p1);
    sensitive << ( i_reg_319 );

    SC_METHOD(thread_tmp_9_fu_701_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( comp_vsum_2_V );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_2_V_2_Val2_s_fu_689_p3 );

    SC_METHOD(thread_tmp_fu_609_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_1_V_2_fu_561_p1 );

    SC_METHOD(thread_tmp_s_fu_743_p2);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( vsum_i_3_V_2_fu_585_p1 );

    SC_METHOD(thread_vbt_1_V_0_ack_in);
    sensitive << ( vbt_1_V_0_state );

    SC_METHOD(thread_vbt_1_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_1_V_0_data_out);
    sensitive << ( vbt_1_V_0_payload_A );
    sensitive << ( vbt_1_V_0_payload_B );
    sensitive << ( vbt_1_V_0_sel );

    SC_METHOD(thread_vbt_1_V_0_load_A);
    sensitive << ( vbt_1_V_0_sel_wr );
    sensitive << ( vbt_1_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_1_V_0_load_B);
    sensitive << ( vbt_1_V_0_sel_wr );
    sensitive << ( vbt_1_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_1_V_0_sel);
    sensitive << ( vbt_1_V_0_sel_rd );

    SC_METHOD(thread_vbt_1_V_0_state_cmp_full);
    sensitive << ( vbt_1_V_0_state );

    SC_METHOD(thread_vbt_1_V_0_vld_in);
    sensitive << ( vbt_1_V_TVALID );

    SC_METHOD(thread_vbt_1_V_0_vld_out);
    sensitive << ( vbt_1_V_0_state );

    SC_METHOD(thread_vbt_1_V_TDATA_blk_n);
    sensitive << ( vbt_1_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_1_V_TREADY);
    sensitive << ( vbt_1_V_0_state );

    SC_METHOD(thread_vbt_2_V_0_ack_in);
    sensitive << ( vbt_2_V_0_state );

    SC_METHOD(thread_vbt_2_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_2_V_0_data_out);
    sensitive << ( vbt_2_V_0_payload_A );
    sensitive << ( vbt_2_V_0_payload_B );
    sensitive << ( vbt_2_V_0_sel );

    SC_METHOD(thread_vbt_2_V_0_load_A);
    sensitive << ( vbt_2_V_0_sel_wr );
    sensitive << ( vbt_2_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_2_V_0_load_B);
    sensitive << ( vbt_2_V_0_sel_wr );
    sensitive << ( vbt_2_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_2_V_0_sel);
    sensitive << ( vbt_2_V_0_sel_rd );

    SC_METHOD(thread_vbt_2_V_0_state_cmp_full);
    sensitive << ( vbt_2_V_0_state );

    SC_METHOD(thread_vbt_2_V_0_vld_in);
    sensitive << ( vbt_2_V_TVALID );

    SC_METHOD(thread_vbt_2_V_0_vld_out);
    sensitive << ( vbt_2_V_0_state );

    SC_METHOD(thread_vbt_2_V_TDATA_blk_n);
    sensitive << ( vbt_2_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_2_V_TREADY);
    sensitive << ( vbt_2_V_0_state );

    SC_METHOD(thread_vbt_3_V_0_ack_in);
    sensitive << ( vbt_3_V_0_state );

    SC_METHOD(thread_vbt_3_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_3_V_0_data_out);
    sensitive << ( vbt_3_V_0_payload_A );
    sensitive << ( vbt_3_V_0_payload_B );
    sensitive << ( vbt_3_V_0_sel );

    SC_METHOD(thread_vbt_3_V_0_load_A);
    sensitive << ( vbt_3_V_0_sel_wr );
    sensitive << ( vbt_3_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_3_V_0_load_B);
    sensitive << ( vbt_3_V_0_sel_wr );
    sensitive << ( vbt_3_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_3_V_0_sel);
    sensitive << ( vbt_3_V_0_sel_rd );

    SC_METHOD(thread_vbt_3_V_0_state_cmp_full);
    sensitive << ( vbt_3_V_0_state );

    SC_METHOD(thread_vbt_3_V_0_vld_in);
    sensitive << ( vbt_3_V_TVALID );

    SC_METHOD(thread_vbt_3_V_0_vld_out);
    sensitive << ( vbt_3_V_0_state );

    SC_METHOD(thread_vbt_3_V_TDATA_blk_n);
    sensitive << ( vbt_3_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_3_V_TREADY);
    sensitive << ( vbt_3_V_0_state );

    SC_METHOD(thread_vbt_4_V_0_ack_in);
    sensitive << ( vbt_4_V_0_state );

    SC_METHOD(thread_vbt_4_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_4_V_0_data_out);
    sensitive << ( vbt_4_V_0_payload_A );
    sensitive << ( vbt_4_V_0_payload_B );
    sensitive << ( vbt_4_V_0_sel );

    SC_METHOD(thread_vbt_4_V_0_load_A);
    sensitive << ( vbt_4_V_0_sel_wr );
    sensitive << ( vbt_4_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_4_V_0_load_B);
    sensitive << ( vbt_4_V_0_sel_wr );
    sensitive << ( vbt_4_V_0_state_cmp_full );

    SC_METHOD(thread_vbt_4_V_0_sel);
    sensitive << ( vbt_4_V_0_sel_rd );

    SC_METHOD(thread_vbt_4_V_0_state_cmp_full);
    sensitive << ( vbt_4_V_0_state );

    SC_METHOD(thread_vbt_4_V_0_vld_in);
    sensitive << ( vbt_4_V_TVALID );

    SC_METHOD(thread_vbt_4_V_0_vld_out);
    sensitive << ( vbt_4_V_0_state );

    SC_METHOD(thread_vbt_4_V_TDATA_blk_n);
    sensitive << ( vbt_4_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vbt_4_V_TREADY);
    sensitive << ( vbt_4_V_0_state );

    SC_METHOD(thread_vbt_test_1_V_comp_s_fu_669_p3);
    sensitive << ( comp_31_V );
    sensitive << ( vbt_test_1_V_fu_569_p1 );
    sensitive << ( tmp_4_fu_633_p2 );

    SC_METHOD(thread_vbt_test_1_V_fu_569_p1);
    sensitive << ( vbt_1_V_0_data_out );

    SC_METHOD(thread_vbt_test_2_V_comp_s_fu_735_p3);
    sensitive << ( comp_32_V );
    sensitive << ( vbt_test_2_V_fu_581_p1 );
    sensitive << ( tmp_9_fu_701_p2 );

    SC_METHOD(thread_vbt_test_2_V_fu_581_p1);
    sensitive << ( vbt_2_V_0_data_out );

    SC_METHOD(thread_vbt_test_3_V_comp_s_fu_801_p3);
    sensitive << ( comp_33_V );
    sensitive << ( vbt_test_3_V_fu_593_p1 );
    sensitive << ( tmp_1_fu_767_p2 );

    SC_METHOD(thread_vbt_test_3_V_fu_593_p1);
    sensitive << ( vbt_3_V_0_data_out );

    SC_METHOD(thread_vbt_test_4_V_comp_s_fu_867_p3);
    sensitive << ( comp_34_V );
    sensitive << ( vbt_test_4_V_fu_605_p1 );
    sensitive << ( tmp_3_fu_833_p2 );

    SC_METHOD(thread_vbt_test_4_V_fu_605_p1);
    sensitive << ( vbt_4_V_0_data_out );

    SC_METHOD(thread_vlr_1_V_0_ack_in);
    sensitive << ( vlr_1_V_0_state );

    SC_METHOD(thread_vlr_1_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_1_V_0_data_out);
    sensitive << ( vlr_1_V_0_payload_A );
    sensitive << ( vlr_1_V_0_payload_B );
    sensitive << ( vlr_1_V_0_sel );

    SC_METHOD(thread_vlr_1_V_0_load_A);
    sensitive << ( vlr_1_V_0_sel_wr );
    sensitive << ( vlr_1_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_1_V_0_load_B);
    sensitive << ( vlr_1_V_0_sel_wr );
    sensitive << ( vlr_1_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_1_V_0_sel);
    sensitive << ( vlr_1_V_0_sel_rd );

    SC_METHOD(thread_vlr_1_V_0_state_cmp_full);
    sensitive << ( vlr_1_V_0_state );

    SC_METHOD(thread_vlr_1_V_0_vld_in);
    sensitive << ( vlr_1_V_TVALID );

    SC_METHOD(thread_vlr_1_V_0_vld_out);
    sensitive << ( vlr_1_V_0_state );

    SC_METHOD(thread_vlr_1_V_TDATA_blk_n);
    sensitive << ( vlr_1_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_1_V_TREADY);
    sensitive << ( vlr_1_V_0_state );

    SC_METHOD(thread_vlr_2_V_0_ack_in);
    sensitive << ( vlr_2_V_0_state );

    SC_METHOD(thread_vlr_2_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_2_V_0_data_out);
    sensitive << ( vlr_2_V_0_payload_A );
    sensitive << ( vlr_2_V_0_payload_B );
    sensitive << ( vlr_2_V_0_sel );

    SC_METHOD(thread_vlr_2_V_0_load_A);
    sensitive << ( vlr_2_V_0_sel_wr );
    sensitive << ( vlr_2_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_2_V_0_load_B);
    sensitive << ( vlr_2_V_0_sel_wr );
    sensitive << ( vlr_2_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_2_V_0_sel);
    sensitive << ( vlr_2_V_0_sel_rd );

    SC_METHOD(thread_vlr_2_V_0_state_cmp_full);
    sensitive << ( vlr_2_V_0_state );

    SC_METHOD(thread_vlr_2_V_0_vld_in);
    sensitive << ( vlr_2_V_TVALID );

    SC_METHOD(thread_vlr_2_V_0_vld_out);
    sensitive << ( vlr_2_V_0_state );

    SC_METHOD(thread_vlr_2_V_TDATA_blk_n);
    sensitive << ( vlr_2_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_2_V_TREADY);
    sensitive << ( vlr_2_V_0_state );

    SC_METHOD(thread_vlr_3_V_0_ack_in);
    sensitive << ( vlr_3_V_0_state );

    SC_METHOD(thread_vlr_3_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_3_V_0_data_out);
    sensitive << ( vlr_3_V_0_payload_A );
    sensitive << ( vlr_3_V_0_payload_B );
    sensitive << ( vlr_3_V_0_sel );

    SC_METHOD(thread_vlr_3_V_0_load_A);
    sensitive << ( vlr_3_V_0_sel_wr );
    sensitive << ( vlr_3_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_3_V_0_load_B);
    sensitive << ( vlr_3_V_0_sel_wr );
    sensitive << ( vlr_3_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_3_V_0_sel);
    sensitive << ( vlr_3_V_0_sel_rd );

    SC_METHOD(thread_vlr_3_V_0_state_cmp_full);
    sensitive << ( vlr_3_V_0_state );

    SC_METHOD(thread_vlr_3_V_0_vld_in);
    sensitive << ( vlr_3_V_TVALID );

    SC_METHOD(thread_vlr_3_V_0_vld_out);
    sensitive << ( vlr_3_V_0_state );

    SC_METHOD(thread_vlr_3_V_TDATA_blk_n);
    sensitive << ( vlr_3_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_3_V_TREADY);
    sensitive << ( vlr_3_V_0_state );

    SC_METHOD(thread_vlr_4_V_0_ack_in);
    sensitive << ( vlr_4_V_0_state );

    SC_METHOD(thread_vlr_4_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_4_V_0_data_out);
    sensitive << ( vlr_4_V_0_payload_A );
    sensitive << ( vlr_4_V_0_payload_B );
    sensitive << ( vlr_4_V_0_sel );

    SC_METHOD(thread_vlr_4_V_0_load_A);
    sensitive << ( vlr_4_V_0_sel_wr );
    sensitive << ( vlr_4_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_4_V_0_load_B);
    sensitive << ( vlr_4_V_0_sel_wr );
    sensitive << ( vlr_4_V_0_state_cmp_full );

    SC_METHOD(thread_vlr_4_V_0_sel);
    sensitive << ( vlr_4_V_0_sel_rd );

    SC_METHOD(thread_vlr_4_V_0_state_cmp_full);
    sensitive << ( vlr_4_V_0_state );

    SC_METHOD(thread_vlr_4_V_0_vld_in);
    sensitive << ( vlr_4_V_TVALID );

    SC_METHOD(thread_vlr_4_V_0_vld_out);
    sensitive << ( vlr_4_V_0_state );

    SC_METHOD(thread_vlr_4_V_TDATA_blk_n);
    sensitive << ( vlr_4_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vlr_4_V_TREADY);
    sensitive << ( vlr_4_V_0_state );

    SC_METHOD(thread_vlr_test_1_V_comp_s_fu_660_p3);
    sensitive << ( comp_21_V );
    sensitive << ( vlr_test_1_V_fu_565_p1 );
    sensitive << ( tmp_4_fu_633_p2 );

    SC_METHOD(thread_vlr_test_1_V_fu_565_p1);
    sensitive << ( vlr_1_V_0_data_out );

    SC_METHOD(thread_vlr_test_2_V_comp_s_fu_727_p3);
    sensitive << ( comp_22_V );
    sensitive << ( vlr_test_2_V_fu_577_p1 );
    sensitive << ( tmp_9_fu_701_p2 );

    SC_METHOD(thread_vlr_test_2_V_fu_577_p1);
    sensitive << ( vlr_2_V_0_data_out );

    SC_METHOD(thread_vlr_test_3_V_comp_s_fu_793_p3);
    sensitive << ( comp_23_V );
    sensitive << ( vlr_test_3_V_fu_589_p1 );
    sensitive << ( tmp_1_fu_767_p2 );

    SC_METHOD(thread_vlr_test_3_V_fu_589_p1);
    sensitive << ( vlr_3_V_0_data_out );

    SC_METHOD(thread_vlr_test_4_V_comp_s_fu_859_p3);
    sensitive << ( comp_24_V );
    sensitive << ( vlr_test_4_V_fu_601_p1 );
    sensitive << ( tmp_3_fu_833_p2 );

    SC_METHOD(thread_vlr_test_4_V_fu_601_p1);
    sensitive << ( vlr_4_V_0_data_out );

    SC_METHOD(thread_vsum_1_V_0_ack_in);
    sensitive << ( vsum_1_V_0_state );

    SC_METHOD(thread_vsum_1_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_1_V_0_data_out);
    sensitive << ( vsum_1_V_0_payload_A );
    sensitive << ( vsum_1_V_0_payload_B );
    sensitive << ( vsum_1_V_0_sel );

    SC_METHOD(thread_vsum_1_V_0_load_A);
    sensitive << ( vsum_1_V_0_sel_wr );
    sensitive << ( vsum_1_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_1_V_0_load_B);
    sensitive << ( vsum_1_V_0_sel_wr );
    sensitive << ( vsum_1_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_1_V_0_sel);
    sensitive << ( vsum_1_V_0_sel_rd );

    SC_METHOD(thread_vsum_1_V_0_state_cmp_full);
    sensitive << ( vsum_1_V_0_state );

    SC_METHOD(thread_vsum_1_V_0_vld_in);
    sensitive << ( vsum_1_V_TVALID );

    SC_METHOD(thread_vsum_1_V_0_vld_out);
    sensitive << ( vsum_1_V_0_state );

    SC_METHOD(thread_vsum_1_V_TDATA_blk_n);
    sensitive << ( vsum_1_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_1_V_TREADY);
    sensitive << ( vsum_1_V_0_state );

    SC_METHOD(thread_vsum_2_V_0_ack_in);
    sensitive << ( vsum_2_V_0_state );

    SC_METHOD(thread_vsum_2_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_2_V_0_data_out);
    sensitive << ( vsum_2_V_0_payload_A );
    sensitive << ( vsum_2_V_0_payload_B );
    sensitive << ( vsum_2_V_0_sel );

    SC_METHOD(thread_vsum_2_V_0_load_A);
    sensitive << ( vsum_2_V_0_sel_wr );
    sensitive << ( vsum_2_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_2_V_0_load_B);
    sensitive << ( vsum_2_V_0_sel_wr );
    sensitive << ( vsum_2_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_2_V_0_sel);
    sensitive << ( vsum_2_V_0_sel_rd );

    SC_METHOD(thread_vsum_2_V_0_state_cmp_full);
    sensitive << ( vsum_2_V_0_state );

    SC_METHOD(thread_vsum_2_V_0_vld_in);
    sensitive << ( vsum_2_V_TVALID );

    SC_METHOD(thread_vsum_2_V_0_vld_out);
    sensitive << ( vsum_2_V_0_state );

    SC_METHOD(thread_vsum_2_V_TDATA_blk_n);
    sensitive << ( vsum_2_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_2_V_TREADY);
    sensitive << ( vsum_2_V_0_state );

    SC_METHOD(thread_vsum_3_V_0_ack_in);
    sensitive << ( vsum_3_V_0_state );

    SC_METHOD(thread_vsum_3_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_3_V_0_data_out);
    sensitive << ( vsum_3_V_0_payload_A );
    sensitive << ( vsum_3_V_0_payload_B );
    sensitive << ( vsum_3_V_0_sel );

    SC_METHOD(thread_vsum_3_V_0_load_A);
    sensitive << ( vsum_3_V_0_sel_wr );
    sensitive << ( vsum_3_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_3_V_0_load_B);
    sensitive << ( vsum_3_V_0_sel_wr );
    sensitive << ( vsum_3_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_3_V_0_sel);
    sensitive << ( vsum_3_V_0_sel_rd );

    SC_METHOD(thread_vsum_3_V_0_state_cmp_full);
    sensitive << ( vsum_3_V_0_state );

    SC_METHOD(thread_vsum_3_V_0_vld_in);
    sensitive << ( vsum_3_V_TVALID );

    SC_METHOD(thread_vsum_3_V_0_vld_out);
    sensitive << ( vsum_3_V_0_state );

    SC_METHOD(thread_vsum_3_V_TDATA_blk_n);
    sensitive << ( vsum_3_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_3_V_TREADY);
    sensitive << ( vsum_3_V_0_state );

    SC_METHOD(thread_vsum_4_V_0_ack_in);
    sensitive << ( vsum_4_V_0_state );

    SC_METHOD(thread_vsum_4_V_0_ack_out);
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_4_V_0_data_out);
    sensitive << ( vsum_4_V_0_payload_A );
    sensitive << ( vsum_4_V_0_payload_B );
    sensitive << ( vsum_4_V_0_sel );

    SC_METHOD(thread_vsum_4_V_0_load_A);
    sensitive << ( vsum_4_V_0_sel_wr );
    sensitive << ( vsum_4_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_4_V_0_load_B);
    sensitive << ( vsum_4_V_0_sel_wr );
    sensitive << ( vsum_4_V_0_state_cmp_full );

    SC_METHOD(thread_vsum_4_V_0_sel);
    sensitive << ( vsum_4_V_0_sel_rd );

    SC_METHOD(thread_vsum_4_V_0_state_cmp_full);
    sensitive << ( vsum_4_V_0_state );

    SC_METHOD(thread_vsum_4_V_0_vld_in);
    sensitive << ( vsum_4_V_TVALID );

    SC_METHOD(thread_vsum_4_V_0_vld_out);
    sensitive << ( vsum_4_V_0_state );

    SC_METHOD(thread_vsum_4_V_TDATA_blk_n);
    sensitive << ( vsum_4_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_vsum_4_V_TREADY);
    sensitive << ( vsum_4_V_0_state );

    SC_METHOD(thread_vsum_i_1_V_1_comp_s_fu_651_p3);
    sensitive << ( comp_11_V );
    sensitive << ( vsum_i_1_V_2_fu_561_p1 );
    sensitive << ( tmp_4_fu_633_p2 );

    SC_METHOD(thread_vsum_i_1_V_2_fu_561_p1);
    sensitive << ( vsum_1_V_0_data_out );

    SC_METHOD(thread_vsum_i_1_V_fu_615_p2);
    sensitive << ( vsum_i_1_V_2_fu_561_p1 );

    SC_METHOD(thread_vsum_i_2_V_1_comp_s_fu_719_p3);
    sensitive << ( comp_12_V );
    sensitive << ( vsum_i_2_V_2_fu_573_p1 );
    sensitive << ( tmp_9_fu_701_p2 );

    SC_METHOD(thread_vsum_i_2_V_2_Val2_s_fu_689_p3);
    sensitive << ( vsum_i_2_V_2_fu_573_p1 );
    sensitive << ( tmp_5_fu_677_p2 );
    sensitive << ( vsum_i_2_V_fu_683_p2 );

    SC_METHOD(thread_vsum_i_2_V_2_fu_573_p1);
    sensitive << ( vsum_2_V_0_data_out );

    SC_METHOD(thread_vsum_i_2_V_fu_683_p2);
    sensitive << ( vsum_i_2_V_2_fu_573_p1 );

    SC_METHOD(thread_vsum_i_3_V_1_comp_s_fu_785_p3);
    sensitive << ( comp_13_V );
    sensitive << ( vsum_i_3_V_2_fu_585_p1 );
    sensitive << ( tmp_1_fu_767_p2 );

    SC_METHOD(thread_vsum_i_3_V_2_Val2_s_fu_755_p3);
    sensitive << ( vsum_i_3_V_2_fu_585_p1 );
    sensitive << ( tmp_s_fu_743_p2 );
    sensitive << ( vsum_i_3_V_fu_749_p2 );

    SC_METHOD(thread_vsum_i_3_V_2_fu_585_p1);
    sensitive << ( vsum_3_V_0_data_out );

    SC_METHOD(thread_vsum_i_3_V_fu_749_p2);
    sensitive << ( vsum_i_3_V_2_fu_585_p1 );

    SC_METHOD(thread_vsum_i_4_V_1_comp_s_fu_851_p3);
    sensitive << ( comp_14_V );
    sensitive << ( vsum_i_4_V_2_fu_597_p1 );
    sensitive << ( tmp_3_fu_833_p2 );

    SC_METHOD(thread_vsum_i_4_V_2_Val2_s_fu_821_p3);
    sensitive << ( vsum_i_4_V_2_fu_597_p1 );
    sensitive << ( tmp_2_fu_809_p2 );
    sensitive << ( vsum_i_4_V_fu_815_p2 );

    SC_METHOD(thread_vsum_i_4_V_2_fu_597_p1);
    sensitive << ( vsum_4_V_0_data_out );

    SC_METHOD(thread_vsum_i_4_V_fu_815_p2);
    sensitive << ( vsum_i_4_V_2_fu_597_p1 );

    SC_METHOD(thread_vsum_test_1_V_1_fu_621_p3);
    sensitive << ( vsum_i_1_V_2_fu_561_p1 );
    sensitive << ( tmp_fu_609_p2 );
    sensitive << ( vsum_i_1_V_fu_615_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vsum_1_V_0_vld_out );
    sensitive << ( vlr_1_V_0_vld_out );
    sensitive << ( vbt_1_V_0_vld_out );
    sensitive << ( out_peaks_V_1_ack_in );
    sensitive << ( vsum_2_V_0_vld_out );
    sensitive << ( vlr_2_V_0_vld_out );
    sensitive << ( vbt_2_V_0_vld_out );
    sensitive << ( vsum_3_V_0_vld_out );
    sensitive << ( vlr_3_V_0_vld_out );
    sensitive << ( vbt_3_V_0_vld_out );
    sensitive << ( vsum_4_V_0_vld_out );
    sensitive << ( vlr_4_V_0_vld_out );
    sensitive << ( vbt_4_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_891_p2 );
    sensitive << ( tmp_7_fu_885_p2 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    vsum_1_V_0_sel_rd = SC_LOGIC_0;
    vsum_1_V_0_sel_wr = SC_LOGIC_0;
    vsum_1_V_0_state = "00";
    vlr_1_V_0_sel_rd = SC_LOGIC_0;
    vlr_1_V_0_sel_wr = SC_LOGIC_0;
    vlr_1_V_0_state = "00";
    vbt_1_V_0_sel_rd = SC_LOGIC_0;
    vbt_1_V_0_sel_wr = SC_LOGIC_0;
    vbt_1_V_0_state = "00";
    out_peaks_V_1_sel_rd = SC_LOGIC_0;
    out_peaks_V_1_sel_wr = SC_LOGIC_0;
    out_peaks_V_1_state = "00";
    vsum_2_V_0_sel_rd = SC_LOGIC_0;
    vsum_2_V_0_sel_wr = SC_LOGIC_0;
    vsum_2_V_0_state = "00";
    vlr_2_V_0_sel_rd = SC_LOGIC_0;
    vlr_2_V_0_sel_wr = SC_LOGIC_0;
    vlr_2_V_0_state = "00";
    vbt_2_V_0_sel_rd = SC_LOGIC_0;
    vbt_2_V_0_sel_wr = SC_LOGIC_0;
    vbt_2_V_0_state = "00";
    vsum_3_V_0_sel_rd = SC_LOGIC_0;
    vsum_3_V_0_sel_wr = SC_LOGIC_0;
    vsum_3_V_0_state = "00";
    vlr_3_V_0_sel_rd = SC_LOGIC_0;
    vlr_3_V_0_sel_wr = SC_LOGIC_0;
    vlr_3_V_0_state = "00";
    vbt_3_V_0_sel_rd = SC_LOGIC_0;
    vbt_3_V_0_sel_wr = SC_LOGIC_0;
    vbt_3_V_0_state = "00";
    vsum_4_V_0_sel_rd = SC_LOGIC_0;
    vsum_4_V_0_sel_wr = SC_LOGIC_0;
    vsum_4_V_0_state = "00";
    vlr_4_V_0_sel_rd = SC_LOGIC_0;
    vlr_4_V_0_sel_wr = SC_LOGIC_0;
    vlr_4_V_0_state = "00";
    vbt_4_V_0_sel_rd = SC_LOGIC_0;
    vbt_4_V_0_sel_wr = SC_LOGIC_0;
    vbt_4_V_0_state = "00";
    comp_vsum_1_V = "00000000000000000000000000";
    comp_11_V = "00000000000000000000000000";
    comp_21_V = "00000000000000000000000000";
    comp_31_V = "00000000000000000000000000";
    comp_vsum_2_V = "00000000000000000000000000";
    comp_12_V = "00000000000000000000000000";
    comp_22_V = "00000000000000000000000000";
    comp_32_V = "00000000000000000000000000";
    comp_vsum_3_V = "00000000000000000000000000";
    comp_13_V = "00000000000000000000000000";
    comp_23_V = "00000000000000000000000000";
    comp_33_V = "00000000000000000000000000";
    comp_vsum_4_V = "00000000000000000000000000";
    comp_14_V = "00000000000000000000000000";
    comp_24_V = "00000000000000000000000000";
    comp_34_V = "00000000000000000000000000";
    contador = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_det_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, vsum_1_V_TDATA, "(port)vsum_1_V_TDATA");
    sc_trace(mVcdFile, vsum_1_V_TVALID, "(port)vsum_1_V_TVALID");
    sc_trace(mVcdFile, vsum_1_V_TREADY, "(port)vsum_1_V_TREADY");
    sc_trace(mVcdFile, vlr_1_V_TDATA, "(port)vlr_1_V_TDATA");
    sc_trace(mVcdFile, vlr_1_V_TVALID, "(port)vlr_1_V_TVALID");
    sc_trace(mVcdFile, vlr_1_V_TREADY, "(port)vlr_1_V_TREADY");
    sc_trace(mVcdFile, vbt_1_V_TDATA, "(port)vbt_1_V_TDATA");
    sc_trace(mVcdFile, vbt_1_V_TVALID, "(port)vbt_1_V_TVALID");
    sc_trace(mVcdFile, vbt_1_V_TREADY, "(port)vbt_1_V_TREADY");
    sc_trace(mVcdFile, out_peaks_V_TDATA, "(port)out_peaks_V_TDATA");
    sc_trace(mVcdFile, out_peaks_V_TVALID, "(port)out_peaks_V_TVALID");
    sc_trace(mVcdFile, out_peaks_V_TREADY, "(port)out_peaks_V_TREADY");
    sc_trace(mVcdFile, vsum_2_V_TDATA, "(port)vsum_2_V_TDATA");
    sc_trace(mVcdFile, vsum_2_V_TVALID, "(port)vsum_2_V_TVALID");
    sc_trace(mVcdFile, vsum_2_V_TREADY, "(port)vsum_2_V_TREADY");
    sc_trace(mVcdFile, vlr_2_V_TDATA, "(port)vlr_2_V_TDATA");
    sc_trace(mVcdFile, vlr_2_V_TVALID, "(port)vlr_2_V_TVALID");
    sc_trace(mVcdFile, vlr_2_V_TREADY, "(port)vlr_2_V_TREADY");
    sc_trace(mVcdFile, vbt_2_V_TDATA, "(port)vbt_2_V_TDATA");
    sc_trace(mVcdFile, vbt_2_V_TVALID, "(port)vbt_2_V_TVALID");
    sc_trace(mVcdFile, vbt_2_V_TREADY, "(port)vbt_2_V_TREADY");
    sc_trace(mVcdFile, vsum_3_V_TDATA, "(port)vsum_3_V_TDATA");
    sc_trace(mVcdFile, vsum_3_V_TVALID, "(port)vsum_3_V_TVALID");
    sc_trace(mVcdFile, vsum_3_V_TREADY, "(port)vsum_3_V_TREADY");
    sc_trace(mVcdFile, vlr_3_V_TDATA, "(port)vlr_3_V_TDATA");
    sc_trace(mVcdFile, vlr_3_V_TVALID, "(port)vlr_3_V_TVALID");
    sc_trace(mVcdFile, vlr_3_V_TREADY, "(port)vlr_3_V_TREADY");
    sc_trace(mVcdFile, vbt_3_V_TDATA, "(port)vbt_3_V_TDATA");
    sc_trace(mVcdFile, vbt_3_V_TVALID, "(port)vbt_3_V_TVALID");
    sc_trace(mVcdFile, vbt_3_V_TREADY, "(port)vbt_3_V_TREADY");
    sc_trace(mVcdFile, vsum_4_V_TDATA, "(port)vsum_4_V_TDATA");
    sc_trace(mVcdFile, vsum_4_V_TVALID, "(port)vsum_4_V_TVALID");
    sc_trace(mVcdFile, vsum_4_V_TREADY, "(port)vsum_4_V_TREADY");
    sc_trace(mVcdFile, vlr_4_V_TDATA, "(port)vlr_4_V_TDATA");
    sc_trace(mVcdFile, vlr_4_V_TVALID, "(port)vlr_4_V_TVALID");
    sc_trace(mVcdFile, vlr_4_V_TREADY, "(port)vlr_4_V_TREADY");
    sc_trace(mVcdFile, vbt_4_V_TDATA, "(port)vbt_4_V_TDATA");
    sc_trace(mVcdFile, vbt_4_V_TVALID, "(port)vbt_4_V_TVALID");
    sc_trace(mVcdFile, vbt_4_V_TREADY, "(port)vbt_4_V_TREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, vsum_1_V_0_data_out, "vsum_1_V_0_data_out");
    sc_trace(mVcdFile, vsum_1_V_0_vld_in, "vsum_1_V_0_vld_in");
    sc_trace(mVcdFile, vsum_1_V_0_vld_out, "vsum_1_V_0_vld_out");
    sc_trace(mVcdFile, vsum_1_V_0_ack_in, "vsum_1_V_0_ack_in");
    sc_trace(mVcdFile, vsum_1_V_0_ack_out, "vsum_1_V_0_ack_out");
    sc_trace(mVcdFile, vsum_1_V_0_payload_A, "vsum_1_V_0_payload_A");
    sc_trace(mVcdFile, vsum_1_V_0_payload_B, "vsum_1_V_0_payload_B");
    sc_trace(mVcdFile, vsum_1_V_0_sel_rd, "vsum_1_V_0_sel_rd");
    sc_trace(mVcdFile, vsum_1_V_0_sel_wr, "vsum_1_V_0_sel_wr");
    sc_trace(mVcdFile, vsum_1_V_0_sel, "vsum_1_V_0_sel");
    sc_trace(mVcdFile, vsum_1_V_0_load_A, "vsum_1_V_0_load_A");
    sc_trace(mVcdFile, vsum_1_V_0_load_B, "vsum_1_V_0_load_B");
    sc_trace(mVcdFile, vsum_1_V_0_state, "vsum_1_V_0_state");
    sc_trace(mVcdFile, vsum_1_V_0_state_cmp_full, "vsum_1_V_0_state_cmp_full");
    sc_trace(mVcdFile, vlr_1_V_0_data_out, "vlr_1_V_0_data_out");
    sc_trace(mVcdFile, vlr_1_V_0_vld_in, "vlr_1_V_0_vld_in");
    sc_trace(mVcdFile, vlr_1_V_0_vld_out, "vlr_1_V_0_vld_out");
    sc_trace(mVcdFile, vlr_1_V_0_ack_in, "vlr_1_V_0_ack_in");
    sc_trace(mVcdFile, vlr_1_V_0_ack_out, "vlr_1_V_0_ack_out");
    sc_trace(mVcdFile, vlr_1_V_0_payload_A, "vlr_1_V_0_payload_A");
    sc_trace(mVcdFile, vlr_1_V_0_payload_B, "vlr_1_V_0_payload_B");
    sc_trace(mVcdFile, vlr_1_V_0_sel_rd, "vlr_1_V_0_sel_rd");
    sc_trace(mVcdFile, vlr_1_V_0_sel_wr, "vlr_1_V_0_sel_wr");
    sc_trace(mVcdFile, vlr_1_V_0_sel, "vlr_1_V_0_sel");
    sc_trace(mVcdFile, vlr_1_V_0_load_A, "vlr_1_V_0_load_A");
    sc_trace(mVcdFile, vlr_1_V_0_load_B, "vlr_1_V_0_load_B");
    sc_trace(mVcdFile, vlr_1_V_0_state, "vlr_1_V_0_state");
    sc_trace(mVcdFile, vlr_1_V_0_state_cmp_full, "vlr_1_V_0_state_cmp_full");
    sc_trace(mVcdFile, vbt_1_V_0_data_out, "vbt_1_V_0_data_out");
    sc_trace(mVcdFile, vbt_1_V_0_vld_in, "vbt_1_V_0_vld_in");
    sc_trace(mVcdFile, vbt_1_V_0_vld_out, "vbt_1_V_0_vld_out");
    sc_trace(mVcdFile, vbt_1_V_0_ack_in, "vbt_1_V_0_ack_in");
    sc_trace(mVcdFile, vbt_1_V_0_ack_out, "vbt_1_V_0_ack_out");
    sc_trace(mVcdFile, vbt_1_V_0_payload_A, "vbt_1_V_0_payload_A");
    sc_trace(mVcdFile, vbt_1_V_0_payload_B, "vbt_1_V_0_payload_B");
    sc_trace(mVcdFile, vbt_1_V_0_sel_rd, "vbt_1_V_0_sel_rd");
    sc_trace(mVcdFile, vbt_1_V_0_sel_wr, "vbt_1_V_0_sel_wr");
    sc_trace(mVcdFile, vbt_1_V_0_sel, "vbt_1_V_0_sel");
    sc_trace(mVcdFile, vbt_1_V_0_load_A, "vbt_1_V_0_load_A");
    sc_trace(mVcdFile, vbt_1_V_0_load_B, "vbt_1_V_0_load_B");
    sc_trace(mVcdFile, vbt_1_V_0_state, "vbt_1_V_0_state");
    sc_trace(mVcdFile, vbt_1_V_0_state_cmp_full, "vbt_1_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_peaks_V_1_data_out, "out_peaks_V_1_data_out");
    sc_trace(mVcdFile, out_peaks_V_1_vld_in, "out_peaks_V_1_vld_in");
    sc_trace(mVcdFile, out_peaks_V_1_vld_out, "out_peaks_V_1_vld_out");
    sc_trace(mVcdFile, out_peaks_V_1_ack_in, "out_peaks_V_1_ack_in");
    sc_trace(mVcdFile, out_peaks_V_1_ack_out, "out_peaks_V_1_ack_out");
    sc_trace(mVcdFile, out_peaks_V_1_payload_A, "out_peaks_V_1_payload_A");
    sc_trace(mVcdFile, out_peaks_V_1_payload_B, "out_peaks_V_1_payload_B");
    sc_trace(mVcdFile, out_peaks_V_1_sel_rd, "out_peaks_V_1_sel_rd");
    sc_trace(mVcdFile, out_peaks_V_1_sel_wr, "out_peaks_V_1_sel_wr");
    sc_trace(mVcdFile, out_peaks_V_1_sel, "out_peaks_V_1_sel");
    sc_trace(mVcdFile, out_peaks_V_1_load_A, "out_peaks_V_1_load_A");
    sc_trace(mVcdFile, out_peaks_V_1_load_B, "out_peaks_V_1_load_B");
    sc_trace(mVcdFile, out_peaks_V_1_state, "out_peaks_V_1_state");
    sc_trace(mVcdFile, out_peaks_V_1_state_cmp_full, "out_peaks_V_1_state_cmp_full");
    sc_trace(mVcdFile, vsum_2_V_0_data_out, "vsum_2_V_0_data_out");
    sc_trace(mVcdFile, vsum_2_V_0_vld_in, "vsum_2_V_0_vld_in");
    sc_trace(mVcdFile, vsum_2_V_0_vld_out, "vsum_2_V_0_vld_out");
    sc_trace(mVcdFile, vsum_2_V_0_ack_in, "vsum_2_V_0_ack_in");
    sc_trace(mVcdFile, vsum_2_V_0_ack_out, "vsum_2_V_0_ack_out");
    sc_trace(mVcdFile, vsum_2_V_0_payload_A, "vsum_2_V_0_payload_A");
    sc_trace(mVcdFile, vsum_2_V_0_payload_B, "vsum_2_V_0_payload_B");
    sc_trace(mVcdFile, vsum_2_V_0_sel_rd, "vsum_2_V_0_sel_rd");
    sc_trace(mVcdFile, vsum_2_V_0_sel_wr, "vsum_2_V_0_sel_wr");
    sc_trace(mVcdFile, vsum_2_V_0_sel, "vsum_2_V_0_sel");
    sc_trace(mVcdFile, vsum_2_V_0_load_A, "vsum_2_V_0_load_A");
    sc_trace(mVcdFile, vsum_2_V_0_load_B, "vsum_2_V_0_load_B");
    sc_trace(mVcdFile, vsum_2_V_0_state, "vsum_2_V_0_state");
    sc_trace(mVcdFile, vsum_2_V_0_state_cmp_full, "vsum_2_V_0_state_cmp_full");
    sc_trace(mVcdFile, vlr_2_V_0_data_out, "vlr_2_V_0_data_out");
    sc_trace(mVcdFile, vlr_2_V_0_vld_in, "vlr_2_V_0_vld_in");
    sc_trace(mVcdFile, vlr_2_V_0_vld_out, "vlr_2_V_0_vld_out");
    sc_trace(mVcdFile, vlr_2_V_0_ack_in, "vlr_2_V_0_ack_in");
    sc_trace(mVcdFile, vlr_2_V_0_ack_out, "vlr_2_V_0_ack_out");
    sc_trace(mVcdFile, vlr_2_V_0_payload_A, "vlr_2_V_0_payload_A");
    sc_trace(mVcdFile, vlr_2_V_0_payload_B, "vlr_2_V_0_payload_B");
    sc_trace(mVcdFile, vlr_2_V_0_sel_rd, "vlr_2_V_0_sel_rd");
    sc_trace(mVcdFile, vlr_2_V_0_sel_wr, "vlr_2_V_0_sel_wr");
    sc_trace(mVcdFile, vlr_2_V_0_sel, "vlr_2_V_0_sel");
    sc_trace(mVcdFile, vlr_2_V_0_load_A, "vlr_2_V_0_load_A");
    sc_trace(mVcdFile, vlr_2_V_0_load_B, "vlr_2_V_0_load_B");
    sc_trace(mVcdFile, vlr_2_V_0_state, "vlr_2_V_0_state");
    sc_trace(mVcdFile, vlr_2_V_0_state_cmp_full, "vlr_2_V_0_state_cmp_full");
    sc_trace(mVcdFile, vbt_2_V_0_data_out, "vbt_2_V_0_data_out");
    sc_trace(mVcdFile, vbt_2_V_0_vld_in, "vbt_2_V_0_vld_in");
    sc_trace(mVcdFile, vbt_2_V_0_vld_out, "vbt_2_V_0_vld_out");
    sc_trace(mVcdFile, vbt_2_V_0_ack_in, "vbt_2_V_0_ack_in");
    sc_trace(mVcdFile, vbt_2_V_0_ack_out, "vbt_2_V_0_ack_out");
    sc_trace(mVcdFile, vbt_2_V_0_payload_A, "vbt_2_V_0_payload_A");
    sc_trace(mVcdFile, vbt_2_V_0_payload_B, "vbt_2_V_0_payload_B");
    sc_trace(mVcdFile, vbt_2_V_0_sel_rd, "vbt_2_V_0_sel_rd");
    sc_trace(mVcdFile, vbt_2_V_0_sel_wr, "vbt_2_V_0_sel_wr");
    sc_trace(mVcdFile, vbt_2_V_0_sel, "vbt_2_V_0_sel");
    sc_trace(mVcdFile, vbt_2_V_0_load_A, "vbt_2_V_0_load_A");
    sc_trace(mVcdFile, vbt_2_V_0_load_B, "vbt_2_V_0_load_B");
    sc_trace(mVcdFile, vbt_2_V_0_state, "vbt_2_V_0_state");
    sc_trace(mVcdFile, vbt_2_V_0_state_cmp_full, "vbt_2_V_0_state_cmp_full");
    sc_trace(mVcdFile, vsum_3_V_0_data_out, "vsum_3_V_0_data_out");
    sc_trace(mVcdFile, vsum_3_V_0_vld_in, "vsum_3_V_0_vld_in");
    sc_trace(mVcdFile, vsum_3_V_0_vld_out, "vsum_3_V_0_vld_out");
    sc_trace(mVcdFile, vsum_3_V_0_ack_in, "vsum_3_V_0_ack_in");
    sc_trace(mVcdFile, vsum_3_V_0_ack_out, "vsum_3_V_0_ack_out");
    sc_trace(mVcdFile, vsum_3_V_0_payload_A, "vsum_3_V_0_payload_A");
    sc_trace(mVcdFile, vsum_3_V_0_payload_B, "vsum_3_V_0_payload_B");
    sc_trace(mVcdFile, vsum_3_V_0_sel_rd, "vsum_3_V_0_sel_rd");
    sc_trace(mVcdFile, vsum_3_V_0_sel_wr, "vsum_3_V_0_sel_wr");
    sc_trace(mVcdFile, vsum_3_V_0_sel, "vsum_3_V_0_sel");
    sc_trace(mVcdFile, vsum_3_V_0_load_A, "vsum_3_V_0_load_A");
    sc_trace(mVcdFile, vsum_3_V_0_load_B, "vsum_3_V_0_load_B");
    sc_trace(mVcdFile, vsum_3_V_0_state, "vsum_3_V_0_state");
    sc_trace(mVcdFile, vsum_3_V_0_state_cmp_full, "vsum_3_V_0_state_cmp_full");
    sc_trace(mVcdFile, vlr_3_V_0_data_out, "vlr_3_V_0_data_out");
    sc_trace(mVcdFile, vlr_3_V_0_vld_in, "vlr_3_V_0_vld_in");
    sc_trace(mVcdFile, vlr_3_V_0_vld_out, "vlr_3_V_0_vld_out");
    sc_trace(mVcdFile, vlr_3_V_0_ack_in, "vlr_3_V_0_ack_in");
    sc_trace(mVcdFile, vlr_3_V_0_ack_out, "vlr_3_V_0_ack_out");
    sc_trace(mVcdFile, vlr_3_V_0_payload_A, "vlr_3_V_0_payload_A");
    sc_trace(mVcdFile, vlr_3_V_0_payload_B, "vlr_3_V_0_payload_B");
    sc_trace(mVcdFile, vlr_3_V_0_sel_rd, "vlr_3_V_0_sel_rd");
    sc_trace(mVcdFile, vlr_3_V_0_sel_wr, "vlr_3_V_0_sel_wr");
    sc_trace(mVcdFile, vlr_3_V_0_sel, "vlr_3_V_0_sel");
    sc_trace(mVcdFile, vlr_3_V_0_load_A, "vlr_3_V_0_load_A");
    sc_trace(mVcdFile, vlr_3_V_0_load_B, "vlr_3_V_0_load_B");
    sc_trace(mVcdFile, vlr_3_V_0_state, "vlr_3_V_0_state");
    sc_trace(mVcdFile, vlr_3_V_0_state_cmp_full, "vlr_3_V_0_state_cmp_full");
    sc_trace(mVcdFile, vbt_3_V_0_data_out, "vbt_3_V_0_data_out");
    sc_trace(mVcdFile, vbt_3_V_0_vld_in, "vbt_3_V_0_vld_in");
    sc_trace(mVcdFile, vbt_3_V_0_vld_out, "vbt_3_V_0_vld_out");
    sc_trace(mVcdFile, vbt_3_V_0_ack_in, "vbt_3_V_0_ack_in");
    sc_trace(mVcdFile, vbt_3_V_0_ack_out, "vbt_3_V_0_ack_out");
    sc_trace(mVcdFile, vbt_3_V_0_payload_A, "vbt_3_V_0_payload_A");
    sc_trace(mVcdFile, vbt_3_V_0_payload_B, "vbt_3_V_0_payload_B");
    sc_trace(mVcdFile, vbt_3_V_0_sel_rd, "vbt_3_V_0_sel_rd");
    sc_trace(mVcdFile, vbt_3_V_0_sel_wr, "vbt_3_V_0_sel_wr");
    sc_trace(mVcdFile, vbt_3_V_0_sel, "vbt_3_V_0_sel");
    sc_trace(mVcdFile, vbt_3_V_0_load_A, "vbt_3_V_0_load_A");
    sc_trace(mVcdFile, vbt_3_V_0_load_B, "vbt_3_V_0_load_B");
    sc_trace(mVcdFile, vbt_3_V_0_state, "vbt_3_V_0_state");
    sc_trace(mVcdFile, vbt_3_V_0_state_cmp_full, "vbt_3_V_0_state_cmp_full");
    sc_trace(mVcdFile, vsum_4_V_0_data_out, "vsum_4_V_0_data_out");
    sc_trace(mVcdFile, vsum_4_V_0_vld_in, "vsum_4_V_0_vld_in");
    sc_trace(mVcdFile, vsum_4_V_0_vld_out, "vsum_4_V_0_vld_out");
    sc_trace(mVcdFile, vsum_4_V_0_ack_in, "vsum_4_V_0_ack_in");
    sc_trace(mVcdFile, vsum_4_V_0_ack_out, "vsum_4_V_0_ack_out");
    sc_trace(mVcdFile, vsum_4_V_0_payload_A, "vsum_4_V_0_payload_A");
    sc_trace(mVcdFile, vsum_4_V_0_payload_B, "vsum_4_V_0_payload_B");
    sc_trace(mVcdFile, vsum_4_V_0_sel_rd, "vsum_4_V_0_sel_rd");
    sc_trace(mVcdFile, vsum_4_V_0_sel_wr, "vsum_4_V_0_sel_wr");
    sc_trace(mVcdFile, vsum_4_V_0_sel, "vsum_4_V_0_sel");
    sc_trace(mVcdFile, vsum_4_V_0_load_A, "vsum_4_V_0_load_A");
    sc_trace(mVcdFile, vsum_4_V_0_load_B, "vsum_4_V_0_load_B");
    sc_trace(mVcdFile, vsum_4_V_0_state, "vsum_4_V_0_state");
    sc_trace(mVcdFile, vsum_4_V_0_state_cmp_full, "vsum_4_V_0_state_cmp_full");
    sc_trace(mVcdFile, vlr_4_V_0_data_out, "vlr_4_V_0_data_out");
    sc_trace(mVcdFile, vlr_4_V_0_vld_in, "vlr_4_V_0_vld_in");
    sc_trace(mVcdFile, vlr_4_V_0_vld_out, "vlr_4_V_0_vld_out");
    sc_trace(mVcdFile, vlr_4_V_0_ack_in, "vlr_4_V_0_ack_in");
    sc_trace(mVcdFile, vlr_4_V_0_ack_out, "vlr_4_V_0_ack_out");
    sc_trace(mVcdFile, vlr_4_V_0_payload_A, "vlr_4_V_0_payload_A");
    sc_trace(mVcdFile, vlr_4_V_0_payload_B, "vlr_4_V_0_payload_B");
    sc_trace(mVcdFile, vlr_4_V_0_sel_rd, "vlr_4_V_0_sel_rd");
    sc_trace(mVcdFile, vlr_4_V_0_sel_wr, "vlr_4_V_0_sel_wr");
    sc_trace(mVcdFile, vlr_4_V_0_sel, "vlr_4_V_0_sel");
    sc_trace(mVcdFile, vlr_4_V_0_load_A, "vlr_4_V_0_load_A");
    sc_trace(mVcdFile, vlr_4_V_0_load_B, "vlr_4_V_0_load_B");
    sc_trace(mVcdFile, vlr_4_V_0_state, "vlr_4_V_0_state");
    sc_trace(mVcdFile, vlr_4_V_0_state_cmp_full, "vlr_4_V_0_state_cmp_full");
    sc_trace(mVcdFile, vbt_4_V_0_data_out, "vbt_4_V_0_data_out");
    sc_trace(mVcdFile, vbt_4_V_0_vld_in, "vbt_4_V_0_vld_in");
    sc_trace(mVcdFile, vbt_4_V_0_vld_out, "vbt_4_V_0_vld_out");
    sc_trace(mVcdFile, vbt_4_V_0_ack_in, "vbt_4_V_0_ack_in");
    sc_trace(mVcdFile, vbt_4_V_0_ack_out, "vbt_4_V_0_ack_out");
    sc_trace(mVcdFile, vbt_4_V_0_payload_A, "vbt_4_V_0_payload_A");
    sc_trace(mVcdFile, vbt_4_V_0_payload_B, "vbt_4_V_0_payload_B");
    sc_trace(mVcdFile, vbt_4_V_0_sel_rd, "vbt_4_V_0_sel_rd");
    sc_trace(mVcdFile, vbt_4_V_0_sel_wr, "vbt_4_V_0_sel_wr");
    sc_trace(mVcdFile, vbt_4_V_0_sel, "vbt_4_V_0_sel");
    sc_trace(mVcdFile, vbt_4_V_0_load_A, "vbt_4_V_0_load_A");
    sc_trace(mVcdFile, vbt_4_V_0_load_B, "vbt_4_V_0_load_B");
    sc_trace(mVcdFile, vbt_4_V_0_state, "vbt_4_V_0_state");
    sc_trace(mVcdFile, vbt_4_V_0_state_cmp_full, "vbt_4_V_0_state_cmp_full");
    sc_trace(mVcdFile, comp_vsum_1_V, "comp_vsum_1_V");
    sc_trace(mVcdFile, comp_11_V, "comp_11_V");
    sc_trace(mVcdFile, comp_21_V, "comp_21_V");
    sc_trace(mVcdFile, comp_31_V, "comp_31_V");
    sc_trace(mVcdFile, comp_vsum_2_V, "comp_vsum_2_V");
    sc_trace(mVcdFile, comp_12_V, "comp_12_V");
    sc_trace(mVcdFile, comp_22_V, "comp_22_V");
    sc_trace(mVcdFile, comp_32_V, "comp_32_V");
    sc_trace(mVcdFile, comp_vsum_3_V, "comp_vsum_3_V");
    sc_trace(mVcdFile, comp_13_V, "comp_13_V");
    sc_trace(mVcdFile, comp_23_V, "comp_23_V");
    sc_trace(mVcdFile, comp_33_V, "comp_33_V");
    sc_trace(mVcdFile, comp_vsum_4_V, "comp_vsum_4_V");
    sc_trace(mVcdFile, comp_14_V, "comp_14_V");
    sc_trace(mVcdFile, comp_24_V, "comp_24_V");
    sc_trace(mVcdFile, comp_34_V, "comp_34_V");
    sc_trace(mVcdFile, contador, "contador");
    sc_trace(mVcdFile, vsum_1_V_TDATA_blk_n, "vsum_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, vlr_1_V_TDATA_blk_n, "vlr_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, vbt_1_V_TDATA_blk_n, "vbt_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, out_peaks_V_TDATA_blk_n, "out_peaks_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, vsum_2_V_TDATA_blk_n, "vsum_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, vlr_2_V_TDATA_blk_n, "vlr_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, vbt_2_V_TDATA_blk_n, "vbt_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, vsum_3_V_TDATA_blk_n, "vsum_3_V_TDATA_blk_n");
    sc_trace(mVcdFile, vlr_3_V_TDATA_blk_n, "vlr_3_V_TDATA_blk_n");
    sc_trace(mVcdFile, vbt_3_V_TDATA_blk_n, "vbt_3_V_TDATA_blk_n");
    sc_trace(mVcdFile, vsum_4_V_TDATA_blk_n, "vsum_4_V_TDATA_blk_n");
    sc_trace(mVcdFile, vlr_4_V_TDATA_blk_n, "vlr_4_V_TDATA_blk_n");
    sc_trace(mVcdFile, vbt_4_V_TDATA_blk_n, "vbt_4_V_TDATA_blk_n");
    sc_trace(mVcdFile, vsum_i_1_V_2_fu_561_p1, "vsum_i_1_V_2_fu_561_p1");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, vlr_test_1_V_fu_565_p1, "vlr_test_1_V_fu_565_p1");
    sc_trace(mVcdFile, vbt_test_1_V_fu_569_p1, "vbt_test_1_V_fu_569_p1");
    sc_trace(mVcdFile, vsum_i_2_V_2_fu_573_p1, "vsum_i_2_V_2_fu_573_p1");
    sc_trace(mVcdFile, vlr_test_2_V_fu_577_p1, "vlr_test_2_V_fu_577_p1");
    sc_trace(mVcdFile, vbt_test_2_V_fu_581_p1, "vbt_test_2_V_fu_581_p1");
    sc_trace(mVcdFile, vsum_i_3_V_2_fu_585_p1, "vsum_i_3_V_2_fu_585_p1");
    sc_trace(mVcdFile, vlr_test_3_V_fu_589_p1, "vlr_test_3_V_fu_589_p1");
    sc_trace(mVcdFile, vbt_test_3_V_fu_593_p1, "vbt_test_3_V_fu_593_p1");
    sc_trace(mVcdFile, vsum_i_4_V_2_fu_597_p1, "vsum_i_4_V_2_fu_597_p1");
    sc_trace(mVcdFile, vlr_test_4_V_fu_601_p1, "vlr_test_4_V_fu_601_p1");
    sc_trace(mVcdFile, vbt_test_4_V_fu_605_p1, "vbt_test_4_V_fu_605_p1");
    sc_trace(mVcdFile, vsum_test_1_V_1_fu_621_p3, "vsum_test_1_V_1_fu_621_p3");
    sc_trace(mVcdFile, tmp_4_fu_633_p2, "tmp_4_fu_633_p2");
    sc_trace(mVcdFile, vbt_test_1_V_comp_s_fu_669_p3, "vbt_test_1_V_comp_s_fu_669_p3");
    sc_trace(mVcdFile, vbt_test_1_V_comp_s_reg_1085, "vbt_test_1_V_comp_s_reg_1085");
    sc_trace(mVcdFile, vsum_i_2_V_2_Val2_s_fu_689_p3, "vsum_i_2_V_2_Val2_s_fu_689_p3");
    sc_trace(mVcdFile, tmp_9_fu_701_p2, "tmp_9_fu_701_p2");
    sc_trace(mVcdFile, vsum_i_2_V_1_comp_s_fu_719_p3, "vsum_i_2_V_1_comp_s_fu_719_p3");
    sc_trace(mVcdFile, vsum_i_2_V_1_comp_s_reg_1100, "vsum_i_2_V_1_comp_s_reg_1100");
    sc_trace(mVcdFile, vlr_test_2_V_comp_s_fu_727_p3, "vlr_test_2_V_comp_s_fu_727_p3");
    sc_trace(mVcdFile, vlr_test_2_V_comp_s_reg_1105, "vlr_test_2_V_comp_s_reg_1105");
    sc_trace(mVcdFile, vbt_test_2_V_comp_s_fu_735_p3, "vbt_test_2_V_comp_s_fu_735_p3");
    sc_trace(mVcdFile, vbt_test_2_V_comp_s_reg_1110, "vbt_test_2_V_comp_s_reg_1110");
    sc_trace(mVcdFile, vsum_i_3_V_2_Val2_s_fu_755_p3, "vsum_i_3_V_2_Val2_s_fu_755_p3");
    sc_trace(mVcdFile, tmp_1_fu_767_p2, "tmp_1_fu_767_p2");
    sc_trace(mVcdFile, vsum_i_3_V_1_comp_s_fu_785_p3, "vsum_i_3_V_1_comp_s_fu_785_p3");
    sc_trace(mVcdFile, vsum_i_3_V_1_comp_s_reg_1125, "vsum_i_3_V_1_comp_s_reg_1125");
    sc_trace(mVcdFile, vlr_test_3_V_comp_s_fu_793_p3, "vlr_test_3_V_comp_s_fu_793_p3");
    sc_trace(mVcdFile, vlr_test_3_V_comp_s_reg_1130, "vlr_test_3_V_comp_s_reg_1130");
    sc_trace(mVcdFile, vbt_test_3_V_comp_s_fu_801_p3, "vbt_test_3_V_comp_s_fu_801_p3");
    sc_trace(mVcdFile, vbt_test_3_V_comp_s_reg_1135, "vbt_test_3_V_comp_s_reg_1135");
    sc_trace(mVcdFile, vsum_i_4_V_2_Val2_s_fu_821_p3, "vsum_i_4_V_2_Val2_s_fu_821_p3");
    sc_trace(mVcdFile, tmp_3_fu_833_p2, "tmp_3_fu_833_p2");
    sc_trace(mVcdFile, vsum_i_4_V_1_comp_s_fu_851_p3, "vsum_i_4_V_1_comp_s_fu_851_p3");
    sc_trace(mVcdFile, vsum_i_4_V_1_comp_s_reg_1150, "vsum_i_4_V_1_comp_s_reg_1150");
    sc_trace(mVcdFile, vlr_test_4_V_comp_s_fu_859_p3, "vlr_test_4_V_comp_s_fu_859_p3");
    sc_trace(mVcdFile, vlr_test_4_V_comp_s_reg_1155, "vlr_test_4_V_comp_s_reg_1155");
    sc_trace(mVcdFile, vbt_test_4_V_comp_s_fu_867_p3, "vbt_test_4_V_comp_s_fu_867_p3");
    sc_trace(mVcdFile, vbt_test_4_V_comp_s_reg_1160, "vbt_test_4_V_comp_s_reg_1160");
    sc_trace(mVcdFile, tmp_6_fu_879_p2, "tmp_6_fu_879_p2");
    sc_trace(mVcdFile, i_1_fu_897_p2, "i_1_fu_897_p2");
    sc_trace(mVcdFile, i_1_reg_1176, "i_1_reg_1176");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, exitcond_fu_891_p2, "exitcond_fu_891_p2");
    sc_trace(mVcdFile, tmp_10_fu_908_p1, "tmp_10_fu_908_p1");
    sc_trace(mVcdFile, peaks_V_address0, "peaks_V_address0");
    sc_trace(mVcdFile, peaks_V_ce0, "peaks_V_ce0");
    sc_trace(mVcdFile, peaks_V_we0, "peaks_V_we0");
    sc_trace(mVcdFile, peaks_V_d0, "peaks_V_d0");
    sc_trace(mVcdFile, peaks_V_q0, "peaks_V_q0");
    sc_trace(mVcdFile, peaks_V_address1, "peaks_V_address1");
    sc_trace(mVcdFile, peaks_V_ce1, "peaks_V_ce1");
    sc_trace(mVcdFile, peaks_V_we1, "peaks_V_we1");
    sc_trace(mVcdFile, peaks_V_d1, "peaks_V_d1");
    sc_trace(mVcdFile, i_reg_319, "i_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_phi_mux_comp_vsum_1_V_flag_1_phi_fu_334_p4, "ap_phi_mux_comp_vsum_1_V_flag_1_phi_fu_334_p4");
    sc_trace(mVcdFile, comp_vsum_1_V_flag_1_reg_330, "comp_vsum_1_V_flag_1_reg_330");
    sc_trace(mVcdFile, tmp_7_fu_885_p2, "tmp_7_fu_885_p2");
    sc_trace(mVcdFile, comp_vsum_1_V_new_1_reg_341, "comp_vsum_1_V_new_1_reg_341");
    sc_trace(mVcdFile, comp_11_V_new_1_reg_352, "comp_11_V_new_1_reg_352");
    sc_trace(mVcdFile, comp_21_V_new_1_reg_363, "comp_21_V_new_1_reg_363");
    sc_trace(mVcdFile, comp_31_V_new_1_reg_374, "comp_31_V_new_1_reg_374");
    sc_trace(mVcdFile, ap_phi_mux_comp_vsum_2_V_flag_1_phi_fu_389_p4, "ap_phi_mux_comp_vsum_2_V_flag_1_phi_fu_389_p4");
    sc_trace(mVcdFile, comp_vsum_2_V_flag_1_reg_385, "comp_vsum_2_V_flag_1_reg_385");
    sc_trace(mVcdFile, comp_vsum_2_V_new_1_reg_396, "comp_vsum_2_V_new_1_reg_396");
    sc_trace(mVcdFile, comp_12_V_new_1_reg_407, "comp_12_V_new_1_reg_407");
    sc_trace(mVcdFile, comp_22_V_new_1_reg_418, "comp_22_V_new_1_reg_418");
    sc_trace(mVcdFile, comp_32_V_new_1_reg_429, "comp_32_V_new_1_reg_429");
    sc_trace(mVcdFile, ap_phi_mux_comp_vsum_3_V_flag_1_phi_fu_444_p4, "ap_phi_mux_comp_vsum_3_V_flag_1_phi_fu_444_p4");
    sc_trace(mVcdFile, comp_vsum_3_V_flag_1_reg_440, "comp_vsum_3_V_flag_1_reg_440");
    sc_trace(mVcdFile, comp_vsum_3_V_new_1_reg_451, "comp_vsum_3_V_new_1_reg_451");
    sc_trace(mVcdFile, comp_13_V_new_1_reg_462, "comp_13_V_new_1_reg_462");
    sc_trace(mVcdFile, comp_23_V_new_1_reg_473, "comp_23_V_new_1_reg_473");
    sc_trace(mVcdFile, comp_33_V_new_1_reg_484, "comp_33_V_new_1_reg_484");
    sc_trace(mVcdFile, ap_phi_mux_comp_vsum_4_V_flag_1_phi_fu_499_p4, "ap_phi_mux_comp_vsum_4_V_flag_1_phi_fu_499_p4");
    sc_trace(mVcdFile, comp_vsum_4_V_flag_1_reg_495, "comp_vsum_4_V_flag_1_reg_495");
    sc_trace(mVcdFile, comp_vsum_4_V_new_1_reg_506, "comp_vsum_4_V_new_1_reg_506");
    sc_trace(mVcdFile, comp_14_V_new_1_reg_517, "comp_14_V_new_1_reg_517");
    sc_trace(mVcdFile, comp_24_V_new_1_reg_528, "comp_24_V_new_1_reg_528");
    sc_trace(mVcdFile, comp_34_V_new_1_reg_539, "comp_34_V_new_1_reg_539");
    sc_trace(mVcdFile, contador_new_reg_550, "contador_new_reg_550");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_8_fu_903_p1, "tmp_8_fu_903_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, vsum_i_1_V_1_comp_s_fu_651_p3, "vsum_i_1_V_1_comp_s_fu_651_p3");
    sc_trace(mVcdFile, vlr_test_1_V_comp_s_fu_660_p3, "vlr_test_1_V_comp_s_fu_660_p3");
    sc_trace(mVcdFile, tmp_fu_609_p2, "tmp_fu_609_p2");
    sc_trace(mVcdFile, vsum_i_1_V_fu_615_p2, "vsum_i_1_V_fu_615_p2");
    sc_trace(mVcdFile, tmp_5_fu_677_p2, "tmp_5_fu_677_p2");
    sc_trace(mVcdFile, vsum_i_2_V_fu_683_p2, "vsum_i_2_V_fu_683_p2");
    sc_trace(mVcdFile, tmp_s_fu_743_p2, "tmp_s_fu_743_p2");
    sc_trace(mVcdFile, vsum_i_3_V_fu_749_p2, "vsum_i_3_V_fu_749_p2");
    sc_trace(mVcdFile, tmp_2_fu_809_p2, "tmp_2_fu_809_p2");
    sc_trace(mVcdFile, vsum_i_4_V_fu_815_p2, "vsum_i_4_V_fu_815_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("max_det.hdltvin.dat");
    mHdltvoutHandle.open("max_det.hdltvout.dat");
}

max_det::~max_det() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete max_det_AXILiteS_s_axi_U;
    delete peaks_V_U;
}

void max_det::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void max_det::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_11_V_new_1_reg_352 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_11_V_new_1_reg_352 = vsum_i_1_V_2_fu_561_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_12_V_new_1_reg_407 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_12_V_new_1_reg_407 = vsum_i_2_V_2_fu_573_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_13_V_new_1_reg_462 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_13_V_new_1_reg_462 = vsum_i_3_V_2_fu_585_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_14_V_new_1_reg_517 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_14_V_new_1_reg_517 = vsum_i_4_V_2_fu_597_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_21_V_new_1_reg_363 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_21_V_new_1_reg_363 = vlr_test_1_V_fu_565_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_22_V_new_1_reg_418 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_22_V_new_1_reg_418 = vlr_test_2_V_fu_577_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_23_V_new_1_reg_473 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_23_V_new_1_reg_473 = vlr_test_3_V_fu_589_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_24_V_new_1_reg_528 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_24_V_new_1_reg_528 = vlr_test_4_V_fu_601_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_31_V_new_1_reg_374 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_31_V_new_1_reg_374 = vbt_test_1_V_fu_569_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_32_V_new_1_reg_429 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_32_V_new_1_reg_429 = vbt_test_2_V_fu_581_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_33_V_new_1_reg_484 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_33_V_new_1_reg_484 = vbt_test_3_V_fu_593_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_34_V_new_1_reg_539 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_34_V_new_1_reg_539 = vbt_test_4_V_fu_605_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_1_V_flag_1_reg_330 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_1_V_flag_1_reg_330 = tmp_4_fu_633_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_1_V_new_1_reg_341 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_1_V_new_1_reg_341 = vsum_test_1_V_1_fu_621_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_2_V_flag_1_reg_385 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_2_V_flag_1_reg_385 = tmp_9_fu_701_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_2_V_new_1_reg_396 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_2_V_new_1_reg_396 = vsum_i_2_V_2_Val2_s_fu_689_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_3_V_flag_1_reg_440 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_3_V_flag_1_reg_440 = tmp_1_fu_767_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_3_V_new_1_reg_451 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_3_V_new_1_reg_451 = vsum_i_3_V_2_Val2_s_fu_755_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_4_V_flag_1_reg_495 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_4_V_flag_1_reg_495 = tmp_3_fu_833_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        comp_vsum_4_V_new_1_reg_506 = ap_const_lv26_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        comp_vsum_4_V_new_1_reg_506 = vsum_i_4_V_2_Val2_s_fu_821_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
        contador_new_reg_550 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
        contador_new_reg_550 = tmp_6_fu_879_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1))) {
        i_reg_319 = i_1_reg_1176.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_319 = ap_const_lv4_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_peaks_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_vld_out.read()))) {
            out_peaks_V_1_sel_rd =  (sc_logic) (~out_peaks_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_peaks_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_ack_in.read()))) {
            out_peaks_V_1_sel_wr =  (sc_logic) (~out_peaks_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_peaks_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_peaks_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_peaks_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_peaks_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_peaks_V_1_state.read())))) {
            out_peaks_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_peaks_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_peaks_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_peaks_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_peaks_V_1_state.read())))) {
            out_peaks_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_peaks_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_peaks_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_peaks_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_peaks_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_peaks_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_ack_out.read()))))) {
            out_peaks_V_1_state = ap_const_lv2_3;
        } else {
            out_peaks_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_1_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_vld_out.read()))) {
            vbt_1_V_0_sel_rd =  (sc_logic) (~vbt_1_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_1_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_ack_in.read()))) {
            vbt_1_V_0_sel_wr =  (sc_logic) (~vbt_1_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_1_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vbt_1_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vbt_1_V_0_state.read())))) {
            vbt_1_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vbt_1_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_1_V_0_state.read())))) {
            vbt_1_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vbt_1_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_1_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vbt_1_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_ack_out.read()))))) {
            vbt_1_V_0_state = ap_const_lv2_3;
        } else {
            vbt_1_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_2_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_vld_out.read()))) {
            vbt_2_V_0_sel_rd =  (sc_logic) (~vbt_2_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_2_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_ack_in.read()))) {
            vbt_2_V_0_sel_wr =  (sc_logic) (~vbt_2_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_2_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vbt_2_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vbt_2_V_0_state.read())))) {
            vbt_2_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vbt_2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_2_V_0_state.read())))) {
            vbt_2_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vbt_2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_2_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vbt_2_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_ack_out.read()))))) {
            vbt_2_V_0_state = ap_const_lv2_3;
        } else {
            vbt_2_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_3_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_vld_out.read()))) {
            vbt_3_V_0_sel_rd =  (sc_logic) (~vbt_3_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_3_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_ack_in.read()))) {
            vbt_3_V_0_sel_wr =  (sc_logic) (~vbt_3_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_3_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vbt_3_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vbt_3_V_0_state.read())))) {
            vbt_3_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vbt_3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_3_V_0_state.read())))) {
            vbt_3_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vbt_3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_3_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vbt_3_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_ack_out.read()))))) {
            vbt_3_V_0_state = ap_const_lv2_3;
        } else {
            vbt_3_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_4_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_vld_out.read()))) {
            vbt_4_V_0_sel_rd =  (sc_logic) (~vbt_4_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_4_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_ack_in.read()))) {
            vbt_4_V_0_sel_wr =  (sc_logic) (~vbt_4_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vbt_4_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vbt_4_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vbt_4_V_0_state.read())))) {
            vbt_4_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vbt_4_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_4_V_0_state.read())))) {
            vbt_4_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vbt_4_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vbt_4_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vbt_4_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_ack_out.read()))))) {
            vbt_4_V_0_state = ap_const_lv2_3;
        } else {
            vbt_4_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_1_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_vld_out.read()))) {
            vlr_1_V_0_sel_rd =  (sc_logic) (~vlr_1_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_1_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_ack_in.read()))) {
            vlr_1_V_0_sel_wr =  (sc_logic) (~vlr_1_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_1_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vlr_1_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vlr_1_V_0_state.read())))) {
            vlr_1_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vlr_1_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_1_V_0_state.read())))) {
            vlr_1_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vlr_1_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_1_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vlr_1_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_ack_out.read()))))) {
            vlr_1_V_0_state = ap_const_lv2_3;
        } else {
            vlr_1_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_2_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_vld_out.read()))) {
            vlr_2_V_0_sel_rd =  (sc_logic) (~vlr_2_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_2_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_ack_in.read()))) {
            vlr_2_V_0_sel_wr =  (sc_logic) (~vlr_2_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_2_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vlr_2_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vlr_2_V_0_state.read())))) {
            vlr_2_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vlr_2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_2_V_0_state.read())))) {
            vlr_2_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vlr_2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_2_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vlr_2_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_ack_out.read()))))) {
            vlr_2_V_0_state = ap_const_lv2_3;
        } else {
            vlr_2_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_3_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_vld_out.read()))) {
            vlr_3_V_0_sel_rd =  (sc_logic) (~vlr_3_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_3_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_ack_in.read()))) {
            vlr_3_V_0_sel_wr =  (sc_logic) (~vlr_3_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_3_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vlr_3_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vlr_3_V_0_state.read())))) {
            vlr_3_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vlr_3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_3_V_0_state.read())))) {
            vlr_3_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vlr_3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_3_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vlr_3_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_ack_out.read()))))) {
            vlr_3_V_0_state = ap_const_lv2_3;
        } else {
            vlr_3_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_4_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_vld_out.read()))) {
            vlr_4_V_0_sel_rd =  (sc_logic) (~vlr_4_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_4_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_ack_in.read()))) {
            vlr_4_V_0_sel_wr =  (sc_logic) (~vlr_4_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vlr_4_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vlr_4_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vlr_4_V_0_state.read())))) {
            vlr_4_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vlr_4_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_4_V_0_state.read())))) {
            vlr_4_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vlr_4_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vlr_4_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vlr_4_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_ack_out.read()))))) {
            vlr_4_V_0_state = ap_const_lv2_3;
        } else {
            vlr_4_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_1_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_vld_out.read()))) {
            vsum_1_V_0_sel_rd =  (sc_logic) (~vsum_1_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_1_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_ack_in.read()))) {
            vsum_1_V_0_sel_wr =  (sc_logic) (~vsum_1_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_1_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_2)))) {
            vsum_1_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_1)))) {
            vsum_1_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(vsum_1_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_ack_out.read()))))) {
            vsum_1_V_0_state = ap_const_lv2_3;
        } else {
            vsum_1_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_2_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_vld_out.read()))) {
            vsum_2_V_0_sel_rd =  (sc_logic) (~vsum_2_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_2_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_ack_in.read()))) {
            vsum_2_V_0_sel_wr =  (sc_logic) (~vsum_2_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_2_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vsum_2_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vsum_2_V_0_state.read())))) {
            vsum_2_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vsum_2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vsum_2_V_0_state.read())))) {
            vsum_2_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vsum_2_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vsum_2_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vsum_2_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_ack_out.read()))))) {
            vsum_2_V_0_state = ap_const_lv2_3;
        } else {
            vsum_2_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_3_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_vld_out.read()))) {
            vsum_3_V_0_sel_rd =  (sc_logic) (~vsum_3_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_3_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_ack_in.read()))) {
            vsum_3_V_0_sel_wr =  (sc_logic) (~vsum_3_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_3_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vsum_3_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vsum_3_V_0_state.read())))) {
            vsum_3_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vsum_3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vsum_3_V_0_state.read())))) {
            vsum_3_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vsum_3_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vsum_3_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vsum_3_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_ack_out.read()))))) {
            vsum_3_V_0_state = ap_const_lv2_3;
        } else {
            vsum_3_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_4_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_vld_out.read()))) {
            vsum_4_V_0_sel_rd =  (sc_logic) (~vsum_4_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_4_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_ack_in.read()))) {
            vsum_4_V_0_sel_wr =  (sc_logic) (~vsum_4_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        vsum_4_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, vsum_4_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, vsum_4_V_0_state.read())))) {
            vsum_4_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, vsum_4_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vsum_4_V_0_state.read())))) {
            vsum_4_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, vsum_4_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, vsum_4_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, vsum_4_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_ack_out.read()))))) {
            vsum_4_V_0_state = ap_const_lv2_3;
        } else {
            vsum_4_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_comp_vsum_1_V_flag_1_phi_fu_334_p4.read()))) {
        comp_11_V = comp_11_V_new_1_reg_352.read();
        comp_21_V = comp_21_V_new_1_reg_363.read();
        comp_31_V = comp_31_V_new_1_reg_374.read();
        comp_vsum_1_V = comp_vsum_1_V_new_1_reg_341.read();
    }
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_comp_vsum_2_V_flag_1_phi_fu_389_p4.read()))) {
        comp_12_V = comp_12_V_new_1_reg_407.read();
        comp_22_V = comp_22_V_new_1_reg_418.read();
        comp_32_V = comp_32_V_new_1_reg_429.read();
        comp_vsum_2_V = comp_vsum_2_V_new_1_reg_396.read();
    }
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_comp_vsum_3_V_flag_1_phi_fu_444_p4.read()))) {
        comp_13_V = comp_13_V_new_1_reg_462.read();
        comp_23_V = comp_23_V_new_1_reg_473.read();
        comp_33_V = comp_33_V_new_1_reg_484.read();
        comp_vsum_3_V = comp_vsum_3_V_new_1_reg_451.read();
    }
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_comp_vsum_4_V_flag_1_phi_fu_499_p4.read()))) {
        comp_14_V = comp_14_V_new_1_reg_517.read();
        comp_24_V = comp_24_V_new_1_reg_528.read();
        comp_34_V = comp_34_V_new_1_reg_539.read();
        comp_vsum_4_V = comp_vsum_4_V_new_1_reg_506.read();
    }
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        contador = contador_new_reg_550.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_1_reg_1176 = i_1_fu_897_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_load_A.read())) {
        out_peaks_V_1_payload_A = tmp_10_fu_908_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_load_B.read())) {
        out_peaks_V_1_payload_B = tmp_10_fu_908_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_load_A.read())) {
        vbt_1_V_0_payload_A = vbt_1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_load_B.read())) {
        vbt_1_V_0_payload_B = vbt_1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_load_A.read())) {
        vbt_2_V_0_payload_A = vbt_2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_load_B.read())) {
        vbt_2_V_0_payload_B = vbt_2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_load_A.read())) {
        vbt_3_V_0_payload_A = vbt_3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_load_B.read())) {
        vbt_3_V_0_payload_B = vbt_3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_load_A.read())) {
        vbt_4_V_0_payload_A = vbt_4_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_load_B.read())) {
        vbt_4_V_0_payload_B = vbt_4_V_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vbt_test_1_V_comp_s_reg_1085 = vbt_test_1_V_comp_s_fu_669_p3.read();
        vbt_test_2_V_comp_s_reg_1110 = vbt_test_2_V_comp_s_fu_735_p3.read();
        vbt_test_3_V_comp_s_reg_1135 = vbt_test_3_V_comp_s_fu_801_p3.read();
        vbt_test_4_V_comp_s_reg_1160 = vbt_test_4_V_comp_s_fu_867_p3.read();
        vlr_test_2_V_comp_s_reg_1105 = vlr_test_2_V_comp_s_fu_727_p3.read();
        vlr_test_3_V_comp_s_reg_1130 = vlr_test_3_V_comp_s_fu_793_p3.read();
        vlr_test_4_V_comp_s_reg_1155 = vlr_test_4_V_comp_s_fu_859_p3.read();
        vsum_i_2_V_1_comp_s_reg_1100 = vsum_i_2_V_1_comp_s_fu_719_p3.read();
        vsum_i_3_V_1_comp_s_reg_1125 = vsum_i_3_V_1_comp_s_fu_785_p3.read();
        vsum_i_4_V_1_comp_s_reg_1150 = vsum_i_4_V_1_comp_s_fu_851_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_load_A.read())) {
        vlr_1_V_0_payload_A = vlr_1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_load_B.read())) {
        vlr_1_V_0_payload_B = vlr_1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_load_A.read())) {
        vlr_2_V_0_payload_A = vlr_2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_load_B.read())) {
        vlr_2_V_0_payload_B = vlr_2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_load_A.read())) {
        vlr_3_V_0_payload_A = vlr_3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_load_B.read())) {
        vlr_3_V_0_payload_B = vlr_3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_load_A.read())) {
        vlr_4_V_0_payload_A = vlr_4_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_load_B.read())) {
        vlr_4_V_0_payload_B = vlr_4_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_load_A.read())) {
        vsum_1_V_0_payload_A = vsum_1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_load_B.read())) {
        vsum_1_V_0_payload_B = vsum_1_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_load_A.read())) {
        vsum_2_V_0_payload_A = vsum_2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_load_B.read())) {
        vsum_2_V_0_payload_B = vsum_2_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_load_A.read())) {
        vsum_3_V_0_payload_A = vsum_3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_load_B.read())) {
        vsum_3_V_0_payload_B = vsum_3_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_load_A.read())) {
        vsum_4_V_0_payload_A = vsum_4_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_load_B.read())) {
        vsum_4_V_0_payload_B = vsum_4_V_TDATA.read();
    }
}

void max_det::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_det::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void max_det::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void max_det::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_det::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void max_det::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void max_det::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void max_det::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void max_det::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void max_det::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void max_det::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void max_det::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read()));
}

void max_det::thread_ap_done() {
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_det::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_det::thread_ap_phi_mux_comp_vsum_1_V_flag_1_phi_fu_334_p4() {
    ap_phi_mux_comp_vsum_1_V_flag_1_phi_fu_334_p4 = comp_vsum_1_V_flag_1_reg_330.read();
}

void max_det::thread_ap_phi_mux_comp_vsum_2_V_flag_1_phi_fu_389_p4() {
    ap_phi_mux_comp_vsum_2_V_flag_1_phi_fu_389_p4 = comp_vsum_2_V_flag_1_reg_385.read();
}

void max_det::thread_ap_phi_mux_comp_vsum_3_V_flag_1_phi_fu_444_p4() {
    ap_phi_mux_comp_vsum_3_V_flag_1_phi_fu_444_p4 = comp_vsum_3_V_flag_1_reg_440.read();
}

void max_det::thread_ap_phi_mux_comp_vsum_4_V_flag_1_phi_fu_499_p4() {
    ap_phi_mux_comp_vsum_4_V_flag_1_phi_fu_499_p4 = comp_vsum_4_V_flag_1_reg_495.read();
}

void max_det::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_det::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void max_det::thread_exitcond_fu_891_p2() {
    exitcond_fu_891_p2 = (!i_reg_319.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_319.read() == ap_const_lv4_C);
}

void max_det::thread_i_1_fu_897_p2() {
    i_1_fu_897_p2 = (!i_reg_319.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_319.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_det::thread_out_peaks_V_1_ack_in() {
    out_peaks_V_1_ack_in = out_peaks_V_1_state.read()[1];
}

void max_det::thread_out_peaks_V_1_ack_out() {
    out_peaks_V_1_ack_out = out_peaks_V_TREADY.read();
}

void max_det::thread_out_peaks_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_peaks_V_1_sel.read())) {
        out_peaks_V_1_data_out = out_peaks_V_1_payload_B.read();
    } else {
        out_peaks_V_1_data_out = out_peaks_V_1_payload_A.read();
    }
}

void max_det::thread_out_peaks_V_1_load_A() {
    out_peaks_V_1_load_A = (out_peaks_V_1_state_cmp_full.read() & ~out_peaks_V_1_sel_wr.read());
}

void max_det::thread_out_peaks_V_1_load_B() {
    out_peaks_V_1_load_B = (out_peaks_V_1_sel_wr.read() & out_peaks_V_1_state_cmp_full.read());
}

void max_det::thread_out_peaks_V_1_sel() {
    out_peaks_V_1_sel = out_peaks_V_1_sel_rd.read();
}

void max_det::thread_out_peaks_V_1_state_cmp_full() {
    out_peaks_V_1_state_cmp_full =  (sc_logic) ((!out_peaks_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_peaks_V_1_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_out_peaks_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1))) {
        out_peaks_V_1_vld_in = ap_const_logic_1;
    } else {
        out_peaks_V_1_vld_in = ap_const_logic_0;
    }
}

void max_det::thread_out_peaks_V_1_vld_out() {
    out_peaks_V_1_vld_out = out_peaks_V_1_state.read()[0];
}

void max_det::thread_out_peaks_V_TDATA() {
    out_peaks_V_TDATA = out_peaks_V_1_data_out.read();
}

void max_det::thread_out_peaks_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        out_peaks_V_TDATA_blk_n = out_peaks_V_1_state.read()[1];
    } else {
        out_peaks_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_out_peaks_V_TVALID() {
    out_peaks_V_TVALID = out_peaks_V_1_state.read()[0];
}

void max_det::thread_peaks_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        peaks_V_address0 =  (sc_lv<4>) (tmp_8_fu_903_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        peaks_V_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        peaks_V_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        peaks_V_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        peaks_V_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        peaks_V_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        peaks_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        peaks_V_address0 = "XXXX";
    }
}

void max_det::thread_peaks_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        peaks_V_address1 =  (sc_lv<4>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        peaks_V_address1 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        peaks_V_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        peaks_V_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        peaks_V_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        peaks_V_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        peaks_V_address1 = "XXXX";
    }
}

void max_det::thread_peaks_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        peaks_V_ce0 = ap_const_logic_1;
    } else {
        peaks_V_ce0 = ap_const_logic_0;
    }
}

void max_det::thread_peaks_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        peaks_V_ce1 = ap_const_logic_1;
    } else {
        peaks_V_ce1 = ap_const_logic_0;
    }
}

void max_det::thread_peaks_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        peaks_V_d0 = vlr_test_4_V_comp_s_reg_1155.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        peaks_V_d0 = vbt_test_3_V_comp_s_reg_1135.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        peaks_V_d0 = vsum_i_3_V_1_comp_s_reg_1125.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        peaks_V_d0 = vlr_test_2_V_comp_s_reg_1105.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        peaks_V_d0 = vbt_test_1_V_comp_s_reg_1085.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        peaks_V_d0 = vsum_i_1_V_1_comp_s_fu_651_p3.read();
    } else {
        peaks_V_d0 =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void max_det::thread_peaks_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        peaks_V_d1 = vbt_test_4_V_comp_s_reg_1160.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        peaks_V_d1 = vsum_i_4_V_1_comp_s_reg_1150.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        peaks_V_d1 = vlr_test_3_V_comp_s_reg_1130.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        peaks_V_d1 = vbt_test_2_V_comp_s_reg_1110.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        peaks_V_d1 = vsum_i_2_V_1_comp_s_reg_1100.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        peaks_V_d1 = vlr_test_1_V_comp_s_fu_660_p3.read();
    } else {
        peaks_V_d1 =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void max_det::thread_peaks_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_885_p2.read())))) {
        peaks_V_we0 = ap_const_logic_1;
    } else {
        peaks_V_we0 = ap_const_logic_0;
    }
}

void max_det::thread_peaks_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_885_p2.read())))) {
        peaks_V_we1 = ap_const_logic_1;
    } else {
        peaks_V_we1 = ap_const_logic_0;
    }
}

void max_det::thread_tmp_10_fu_908_p1() {
    tmp_10_fu_908_p1 = esl_sext<32,26>(peaks_V_q0.read());
}

void max_det::thread_tmp_1_fu_767_p2() {
    tmp_1_fu_767_p2 = (!vsum_i_3_V_2_Val2_s_fu_755_p3.read().is_01() || !comp_vsum_3_V.read().is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_3_V_2_Val2_s_fu_755_p3.read()) > sc_bigint<26>(comp_vsum_3_V.read()));
}

void max_det::thread_tmp_2_fu_809_p2() {
    tmp_2_fu_809_p2 = (!vsum_i_4_V_2_fu_597_p1.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_4_V_2_fu_597_p1.read()) > sc_bigint<26>(ap_const_lv26_0));
}

void max_det::thread_tmp_3_fu_833_p2() {
    tmp_3_fu_833_p2 = (!vsum_i_4_V_2_Val2_s_fu_821_p3.read().is_01() || !comp_vsum_4_V.read().is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_4_V_2_Val2_s_fu_821_p3.read()) > sc_bigint<26>(comp_vsum_4_V.read()));
}

void max_det::thread_tmp_4_fu_633_p2() {
    tmp_4_fu_633_p2 = (!vsum_test_1_V_1_fu_621_p3.read().is_01() || !comp_vsum_1_V.read().is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_test_1_V_1_fu_621_p3.read()) > sc_bigint<26>(comp_vsum_1_V.read()));
}

void max_det::thread_tmp_5_fu_677_p2() {
    tmp_5_fu_677_p2 = (!vsum_i_2_V_2_fu_573_p1.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_2_V_2_fu_573_p1.read()) > sc_bigint<26>(ap_const_lv26_0));
}

void max_det::thread_tmp_6_fu_879_p2() {
    tmp_6_fu_879_p2 = (!ap_const_lv32_1.is_01() || !contador.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(contador.read()));
}

void max_det::thread_tmp_7_fu_885_p2() {
    tmp_7_fu_885_p2 = (!tmp_6_fu_879_p2.read().is_01() || !ap_const_lv32_61A8.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_879_p2.read() == ap_const_lv32_61A8);
}

void max_det::thread_tmp_8_fu_903_p1() {
    tmp_8_fu_903_p1 = esl_zext<64,4>(i_reg_319.read());
}

void max_det::thread_tmp_9_fu_701_p2() {
    tmp_9_fu_701_p2 = (!vsum_i_2_V_2_Val2_s_fu_689_p3.read().is_01() || !comp_vsum_2_V.read().is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_2_V_2_Val2_s_fu_689_p3.read()) > sc_bigint<26>(comp_vsum_2_V.read()));
}

void max_det::thread_tmp_fu_609_p2() {
    tmp_fu_609_p2 = (!vsum_i_1_V_2_fu_561_p1.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_1_V_2_fu_561_p1.read()) > sc_bigint<26>(ap_const_lv26_0));
}

void max_det::thread_tmp_s_fu_743_p2() {
    tmp_s_fu_743_p2 = (!vsum_i_3_V_2_fu_585_p1.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): (sc_bigint<26>(vsum_i_3_V_2_fu_585_p1.read()) > sc_bigint<26>(ap_const_lv26_0));
}

void max_det::thread_vbt_1_V_0_ack_in() {
    vbt_1_V_0_ack_in = vbt_1_V_0_state.read()[1];
}

void max_det::thread_vbt_1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vbt_1_V_0_ack_out = ap_const_logic_1;
    } else {
        vbt_1_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vbt_1_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_1_V_0_sel.read())) {
        vbt_1_V_0_data_out = vbt_1_V_0_payload_B.read();
    } else {
        vbt_1_V_0_data_out = vbt_1_V_0_payload_A.read();
    }
}

void max_det::thread_vbt_1_V_0_load_A() {
    vbt_1_V_0_load_A = (vbt_1_V_0_state_cmp_full.read() & ~vbt_1_V_0_sel_wr.read());
}

void max_det::thread_vbt_1_V_0_load_B() {
    vbt_1_V_0_load_B = (vbt_1_V_0_sel_wr.read() & vbt_1_V_0_state_cmp_full.read());
}

void max_det::thread_vbt_1_V_0_sel() {
    vbt_1_V_0_sel = vbt_1_V_0_sel_rd.read();
}

void max_det::thread_vbt_1_V_0_state_cmp_full() {
    vbt_1_V_0_state_cmp_full =  (sc_logic) ((!vbt_1_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vbt_1_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vbt_1_V_0_vld_in() {
    vbt_1_V_0_vld_in = vbt_1_V_TVALID.read();
}

void max_det::thread_vbt_1_V_0_vld_out() {
    vbt_1_V_0_vld_out = vbt_1_V_0_state.read()[0];
}

void max_det::thread_vbt_1_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vbt_1_V_TDATA_blk_n = vbt_1_V_0_state.read()[0];
    } else {
        vbt_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vbt_1_V_TREADY() {
    vbt_1_V_TREADY = vbt_1_V_0_state.read()[1];
}

void max_det::thread_vbt_2_V_0_ack_in() {
    vbt_2_V_0_ack_in = vbt_2_V_0_state.read()[1];
}

void max_det::thread_vbt_2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vbt_2_V_0_ack_out = ap_const_logic_1;
    } else {
        vbt_2_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vbt_2_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_2_V_0_sel.read())) {
        vbt_2_V_0_data_out = vbt_2_V_0_payload_B.read();
    } else {
        vbt_2_V_0_data_out = vbt_2_V_0_payload_A.read();
    }
}

void max_det::thread_vbt_2_V_0_load_A() {
    vbt_2_V_0_load_A = (vbt_2_V_0_state_cmp_full.read() & ~vbt_2_V_0_sel_wr.read());
}

void max_det::thread_vbt_2_V_0_load_B() {
    vbt_2_V_0_load_B = (vbt_2_V_0_sel_wr.read() & vbt_2_V_0_state_cmp_full.read());
}

void max_det::thread_vbt_2_V_0_sel() {
    vbt_2_V_0_sel = vbt_2_V_0_sel_rd.read();
}

void max_det::thread_vbt_2_V_0_state_cmp_full() {
    vbt_2_V_0_state_cmp_full =  (sc_logic) ((!vbt_2_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vbt_2_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vbt_2_V_0_vld_in() {
    vbt_2_V_0_vld_in = vbt_2_V_TVALID.read();
}

void max_det::thread_vbt_2_V_0_vld_out() {
    vbt_2_V_0_vld_out = vbt_2_V_0_state.read()[0];
}

void max_det::thread_vbt_2_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vbt_2_V_TDATA_blk_n = vbt_2_V_0_state.read()[0];
    } else {
        vbt_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vbt_2_V_TREADY() {
    vbt_2_V_TREADY = vbt_2_V_0_state.read()[1];
}

void max_det::thread_vbt_3_V_0_ack_in() {
    vbt_3_V_0_ack_in = vbt_3_V_0_state.read()[1];
}

void max_det::thread_vbt_3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vbt_3_V_0_ack_out = ap_const_logic_1;
    } else {
        vbt_3_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vbt_3_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_3_V_0_sel.read())) {
        vbt_3_V_0_data_out = vbt_3_V_0_payload_B.read();
    } else {
        vbt_3_V_0_data_out = vbt_3_V_0_payload_A.read();
    }
}

void max_det::thread_vbt_3_V_0_load_A() {
    vbt_3_V_0_load_A = (vbt_3_V_0_state_cmp_full.read() & ~vbt_3_V_0_sel_wr.read());
}

void max_det::thread_vbt_3_V_0_load_B() {
    vbt_3_V_0_load_B = (vbt_3_V_0_sel_wr.read() & vbt_3_V_0_state_cmp_full.read());
}

void max_det::thread_vbt_3_V_0_sel() {
    vbt_3_V_0_sel = vbt_3_V_0_sel_rd.read();
}

void max_det::thread_vbt_3_V_0_state_cmp_full() {
    vbt_3_V_0_state_cmp_full =  (sc_logic) ((!vbt_3_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vbt_3_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vbt_3_V_0_vld_in() {
    vbt_3_V_0_vld_in = vbt_3_V_TVALID.read();
}

void max_det::thread_vbt_3_V_0_vld_out() {
    vbt_3_V_0_vld_out = vbt_3_V_0_state.read()[0];
}

void max_det::thread_vbt_3_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vbt_3_V_TDATA_blk_n = vbt_3_V_0_state.read()[0];
    } else {
        vbt_3_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vbt_3_V_TREADY() {
    vbt_3_V_TREADY = vbt_3_V_0_state.read()[1];
}

void max_det::thread_vbt_4_V_0_ack_in() {
    vbt_4_V_0_ack_in = vbt_4_V_0_state.read()[1];
}

void max_det::thread_vbt_4_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vbt_4_V_0_ack_out = ap_const_logic_1;
    } else {
        vbt_4_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vbt_4_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vbt_4_V_0_sel.read())) {
        vbt_4_V_0_data_out = vbt_4_V_0_payload_B.read();
    } else {
        vbt_4_V_0_data_out = vbt_4_V_0_payload_A.read();
    }
}

void max_det::thread_vbt_4_V_0_load_A() {
    vbt_4_V_0_load_A = (vbt_4_V_0_state_cmp_full.read() & ~vbt_4_V_0_sel_wr.read());
}

void max_det::thread_vbt_4_V_0_load_B() {
    vbt_4_V_0_load_B = (vbt_4_V_0_sel_wr.read() & vbt_4_V_0_state_cmp_full.read());
}

void max_det::thread_vbt_4_V_0_sel() {
    vbt_4_V_0_sel = vbt_4_V_0_sel_rd.read();
}

void max_det::thread_vbt_4_V_0_state_cmp_full() {
    vbt_4_V_0_state_cmp_full =  (sc_logic) ((!vbt_4_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vbt_4_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vbt_4_V_0_vld_in() {
    vbt_4_V_0_vld_in = vbt_4_V_TVALID.read();
}

void max_det::thread_vbt_4_V_0_vld_out() {
    vbt_4_V_0_vld_out = vbt_4_V_0_state.read()[0];
}

void max_det::thread_vbt_4_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vbt_4_V_TDATA_blk_n = vbt_4_V_0_state.read()[0];
    } else {
        vbt_4_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vbt_4_V_TREADY() {
    vbt_4_V_TREADY = vbt_4_V_0_state.read()[1];
}

void max_det::thread_vbt_test_1_V_comp_s_fu_669_p3() {
    vbt_test_1_V_comp_s_fu_669_p3 = (!tmp_4_fu_633_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_4_fu_633_p2.read()[0].to_bool())? vbt_test_1_V_fu_569_p1.read(): comp_31_V.read());
}

void max_det::thread_vbt_test_1_V_fu_569_p1() {
    vbt_test_1_V_fu_569_p1 = vbt_1_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vbt_test_2_V_comp_s_fu_735_p3() {
    vbt_test_2_V_comp_s_fu_735_p3 = (!tmp_9_fu_701_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_9_fu_701_p2.read()[0].to_bool())? vbt_test_2_V_fu_581_p1.read(): comp_32_V.read());
}

void max_det::thread_vbt_test_2_V_fu_581_p1() {
    vbt_test_2_V_fu_581_p1 = vbt_2_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vbt_test_3_V_comp_s_fu_801_p3() {
    vbt_test_3_V_comp_s_fu_801_p3 = (!tmp_1_fu_767_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_1_fu_767_p2.read()[0].to_bool())? vbt_test_3_V_fu_593_p1.read(): comp_33_V.read());
}

void max_det::thread_vbt_test_3_V_fu_593_p1() {
    vbt_test_3_V_fu_593_p1 = vbt_3_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vbt_test_4_V_comp_s_fu_867_p3() {
    vbt_test_4_V_comp_s_fu_867_p3 = (!tmp_3_fu_833_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_3_fu_833_p2.read()[0].to_bool())? vbt_test_4_V_fu_605_p1.read(): comp_34_V.read());
}

void max_det::thread_vbt_test_4_V_fu_605_p1() {
    vbt_test_4_V_fu_605_p1 = vbt_4_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vlr_1_V_0_ack_in() {
    vlr_1_V_0_ack_in = vlr_1_V_0_state.read()[1];
}

void max_det::thread_vlr_1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vlr_1_V_0_ack_out = ap_const_logic_1;
    } else {
        vlr_1_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vlr_1_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_1_V_0_sel.read())) {
        vlr_1_V_0_data_out = vlr_1_V_0_payload_B.read();
    } else {
        vlr_1_V_0_data_out = vlr_1_V_0_payload_A.read();
    }
}

void max_det::thread_vlr_1_V_0_load_A() {
    vlr_1_V_0_load_A = (vlr_1_V_0_state_cmp_full.read() & ~vlr_1_V_0_sel_wr.read());
}

void max_det::thread_vlr_1_V_0_load_B() {
    vlr_1_V_0_load_B = (vlr_1_V_0_sel_wr.read() & vlr_1_V_0_state_cmp_full.read());
}

void max_det::thread_vlr_1_V_0_sel() {
    vlr_1_V_0_sel = vlr_1_V_0_sel_rd.read();
}

void max_det::thread_vlr_1_V_0_state_cmp_full() {
    vlr_1_V_0_state_cmp_full =  (sc_logic) ((!vlr_1_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vlr_1_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vlr_1_V_0_vld_in() {
    vlr_1_V_0_vld_in = vlr_1_V_TVALID.read();
}

void max_det::thread_vlr_1_V_0_vld_out() {
    vlr_1_V_0_vld_out = vlr_1_V_0_state.read()[0];
}

void max_det::thread_vlr_1_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vlr_1_V_TDATA_blk_n = vlr_1_V_0_state.read()[0];
    } else {
        vlr_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vlr_1_V_TREADY() {
    vlr_1_V_TREADY = vlr_1_V_0_state.read()[1];
}

void max_det::thread_vlr_2_V_0_ack_in() {
    vlr_2_V_0_ack_in = vlr_2_V_0_state.read()[1];
}

void max_det::thread_vlr_2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vlr_2_V_0_ack_out = ap_const_logic_1;
    } else {
        vlr_2_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vlr_2_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_2_V_0_sel.read())) {
        vlr_2_V_0_data_out = vlr_2_V_0_payload_B.read();
    } else {
        vlr_2_V_0_data_out = vlr_2_V_0_payload_A.read();
    }
}

void max_det::thread_vlr_2_V_0_load_A() {
    vlr_2_V_0_load_A = (vlr_2_V_0_state_cmp_full.read() & ~vlr_2_V_0_sel_wr.read());
}

void max_det::thread_vlr_2_V_0_load_B() {
    vlr_2_V_0_load_B = (vlr_2_V_0_sel_wr.read() & vlr_2_V_0_state_cmp_full.read());
}

void max_det::thread_vlr_2_V_0_sel() {
    vlr_2_V_0_sel = vlr_2_V_0_sel_rd.read();
}

void max_det::thread_vlr_2_V_0_state_cmp_full() {
    vlr_2_V_0_state_cmp_full =  (sc_logic) ((!vlr_2_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vlr_2_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vlr_2_V_0_vld_in() {
    vlr_2_V_0_vld_in = vlr_2_V_TVALID.read();
}

void max_det::thread_vlr_2_V_0_vld_out() {
    vlr_2_V_0_vld_out = vlr_2_V_0_state.read()[0];
}

void max_det::thread_vlr_2_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vlr_2_V_TDATA_blk_n = vlr_2_V_0_state.read()[0];
    } else {
        vlr_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vlr_2_V_TREADY() {
    vlr_2_V_TREADY = vlr_2_V_0_state.read()[1];
}

void max_det::thread_vlr_3_V_0_ack_in() {
    vlr_3_V_0_ack_in = vlr_3_V_0_state.read()[1];
}

void max_det::thread_vlr_3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vlr_3_V_0_ack_out = ap_const_logic_1;
    } else {
        vlr_3_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vlr_3_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_3_V_0_sel.read())) {
        vlr_3_V_0_data_out = vlr_3_V_0_payload_B.read();
    } else {
        vlr_3_V_0_data_out = vlr_3_V_0_payload_A.read();
    }
}

void max_det::thread_vlr_3_V_0_load_A() {
    vlr_3_V_0_load_A = (vlr_3_V_0_state_cmp_full.read() & ~vlr_3_V_0_sel_wr.read());
}

void max_det::thread_vlr_3_V_0_load_B() {
    vlr_3_V_0_load_B = (vlr_3_V_0_sel_wr.read() & vlr_3_V_0_state_cmp_full.read());
}

void max_det::thread_vlr_3_V_0_sel() {
    vlr_3_V_0_sel = vlr_3_V_0_sel_rd.read();
}

void max_det::thread_vlr_3_V_0_state_cmp_full() {
    vlr_3_V_0_state_cmp_full =  (sc_logic) ((!vlr_3_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vlr_3_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vlr_3_V_0_vld_in() {
    vlr_3_V_0_vld_in = vlr_3_V_TVALID.read();
}

void max_det::thread_vlr_3_V_0_vld_out() {
    vlr_3_V_0_vld_out = vlr_3_V_0_state.read()[0];
}

void max_det::thread_vlr_3_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vlr_3_V_TDATA_blk_n = vlr_3_V_0_state.read()[0];
    } else {
        vlr_3_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vlr_3_V_TREADY() {
    vlr_3_V_TREADY = vlr_3_V_0_state.read()[1];
}

void max_det::thread_vlr_4_V_0_ack_in() {
    vlr_4_V_0_ack_in = vlr_4_V_0_state.read()[1];
}

void max_det::thread_vlr_4_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vlr_4_V_0_ack_out = ap_const_logic_1;
    } else {
        vlr_4_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vlr_4_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vlr_4_V_0_sel.read())) {
        vlr_4_V_0_data_out = vlr_4_V_0_payload_B.read();
    } else {
        vlr_4_V_0_data_out = vlr_4_V_0_payload_A.read();
    }
}

void max_det::thread_vlr_4_V_0_load_A() {
    vlr_4_V_0_load_A = (vlr_4_V_0_state_cmp_full.read() & ~vlr_4_V_0_sel_wr.read());
}

void max_det::thread_vlr_4_V_0_load_B() {
    vlr_4_V_0_load_B = (vlr_4_V_0_sel_wr.read() & vlr_4_V_0_state_cmp_full.read());
}

void max_det::thread_vlr_4_V_0_sel() {
    vlr_4_V_0_sel = vlr_4_V_0_sel_rd.read();
}

void max_det::thread_vlr_4_V_0_state_cmp_full() {
    vlr_4_V_0_state_cmp_full =  (sc_logic) ((!vlr_4_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vlr_4_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vlr_4_V_0_vld_in() {
    vlr_4_V_0_vld_in = vlr_4_V_TVALID.read();
}

void max_det::thread_vlr_4_V_0_vld_out() {
    vlr_4_V_0_vld_out = vlr_4_V_0_state.read()[0];
}

void max_det::thread_vlr_4_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vlr_4_V_TDATA_blk_n = vlr_4_V_0_state.read()[0];
    } else {
        vlr_4_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vlr_4_V_TREADY() {
    vlr_4_V_TREADY = vlr_4_V_0_state.read()[1];
}

void max_det::thread_vlr_test_1_V_comp_s_fu_660_p3() {
    vlr_test_1_V_comp_s_fu_660_p3 = (!tmp_4_fu_633_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_4_fu_633_p2.read()[0].to_bool())? vlr_test_1_V_fu_565_p1.read(): comp_21_V.read());
}

void max_det::thread_vlr_test_1_V_fu_565_p1() {
    vlr_test_1_V_fu_565_p1 = vlr_1_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vlr_test_2_V_comp_s_fu_727_p3() {
    vlr_test_2_V_comp_s_fu_727_p3 = (!tmp_9_fu_701_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_9_fu_701_p2.read()[0].to_bool())? vlr_test_2_V_fu_577_p1.read(): comp_22_V.read());
}

void max_det::thread_vlr_test_2_V_fu_577_p1() {
    vlr_test_2_V_fu_577_p1 = vlr_2_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vlr_test_3_V_comp_s_fu_793_p3() {
    vlr_test_3_V_comp_s_fu_793_p3 = (!tmp_1_fu_767_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_1_fu_767_p2.read()[0].to_bool())? vlr_test_3_V_fu_589_p1.read(): comp_23_V.read());
}

void max_det::thread_vlr_test_3_V_fu_589_p1() {
    vlr_test_3_V_fu_589_p1 = vlr_3_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vlr_test_4_V_comp_s_fu_859_p3() {
    vlr_test_4_V_comp_s_fu_859_p3 = (!tmp_3_fu_833_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_3_fu_833_p2.read()[0].to_bool())? vlr_test_4_V_fu_601_p1.read(): comp_24_V.read());
}

void max_det::thread_vlr_test_4_V_fu_601_p1() {
    vlr_test_4_V_fu_601_p1 = vlr_4_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vsum_1_V_0_ack_in() {
    vsum_1_V_0_ack_in = vsum_1_V_0_state.read()[1];
}

void max_det::thread_vsum_1_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vsum_1_V_0_ack_out = ap_const_logic_1;
    } else {
        vsum_1_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vsum_1_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_1_V_0_sel.read())) {
        vsum_1_V_0_data_out = vsum_1_V_0_payload_B.read();
    } else {
        vsum_1_V_0_data_out = vsum_1_V_0_payload_A.read();
    }
}

void max_det::thread_vsum_1_V_0_load_A() {
    vsum_1_V_0_load_A = (vsum_1_V_0_state_cmp_full.read() & ~vsum_1_V_0_sel_wr.read());
}

void max_det::thread_vsum_1_V_0_load_B() {
    vsum_1_V_0_load_B = (vsum_1_V_0_sel_wr.read() & vsum_1_V_0_state_cmp_full.read());
}

void max_det::thread_vsum_1_V_0_sel() {
    vsum_1_V_0_sel = vsum_1_V_0_sel_rd.read();
}

void max_det::thread_vsum_1_V_0_state_cmp_full() {
    vsum_1_V_0_state_cmp_full =  (sc_logic) ((!vsum_1_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vsum_1_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vsum_1_V_0_vld_in() {
    vsum_1_V_0_vld_in = vsum_1_V_TVALID.read();
}

void max_det::thread_vsum_1_V_0_vld_out() {
    vsum_1_V_0_vld_out = vsum_1_V_0_state.read()[0];
}

void max_det::thread_vsum_1_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vsum_1_V_TDATA_blk_n = vsum_1_V_0_state.read()[0];
    } else {
        vsum_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vsum_1_V_TREADY() {
    vsum_1_V_TREADY = vsum_1_V_0_state.read()[1];
}

void max_det::thread_vsum_2_V_0_ack_in() {
    vsum_2_V_0_ack_in = vsum_2_V_0_state.read()[1];
}

void max_det::thread_vsum_2_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vsum_2_V_0_ack_out = ap_const_logic_1;
    } else {
        vsum_2_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vsum_2_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_2_V_0_sel.read())) {
        vsum_2_V_0_data_out = vsum_2_V_0_payload_B.read();
    } else {
        vsum_2_V_0_data_out = vsum_2_V_0_payload_A.read();
    }
}

void max_det::thread_vsum_2_V_0_load_A() {
    vsum_2_V_0_load_A = (vsum_2_V_0_state_cmp_full.read() & ~vsum_2_V_0_sel_wr.read());
}

void max_det::thread_vsum_2_V_0_load_B() {
    vsum_2_V_0_load_B = (vsum_2_V_0_sel_wr.read() & vsum_2_V_0_state_cmp_full.read());
}

void max_det::thread_vsum_2_V_0_sel() {
    vsum_2_V_0_sel = vsum_2_V_0_sel_rd.read();
}

void max_det::thread_vsum_2_V_0_state_cmp_full() {
    vsum_2_V_0_state_cmp_full =  (sc_logic) ((!vsum_2_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vsum_2_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vsum_2_V_0_vld_in() {
    vsum_2_V_0_vld_in = vsum_2_V_TVALID.read();
}

void max_det::thread_vsum_2_V_0_vld_out() {
    vsum_2_V_0_vld_out = vsum_2_V_0_state.read()[0];
}

void max_det::thread_vsum_2_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vsum_2_V_TDATA_blk_n = vsum_2_V_0_state.read()[0];
    } else {
        vsum_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vsum_2_V_TREADY() {
    vsum_2_V_TREADY = vsum_2_V_0_state.read()[1];
}

void max_det::thread_vsum_3_V_0_ack_in() {
    vsum_3_V_0_ack_in = vsum_3_V_0_state.read()[1];
}

void max_det::thread_vsum_3_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vsum_3_V_0_ack_out = ap_const_logic_1;
    } else {
        vsum_3_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vsum_3_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_3_V_0_sel.read())) {
        vsum_3_V_0_data_out = vsum_3_V_0_payload_B.read();
    } else {
        vsum_3_V_0_data_out = vsum_3_V_0_payload_A.read();
    }
}

void max_det::thread_vsum_3_V_0_load_A() {
    vsum_3_V_0_load_A = (vsum_3_V_0_state_cmp_full.read() & ~vsum_3_V_0_sel_wr.read());
}

void max_det::thread_vsum_3_V_0_load_B() {
    vsum_3_V_0_load_B = (vsum_3_V_0_sel_wr.read() & vsum_3_V_0_state_cmp_full.read());
}

void max_det::thread_vsum_3_V_0_sel() {
    vsum_3_V_0_sel = vsum_3_V_0_sel_rd.read();
}

void max_det::thread_vsum_3_V_0_state_cmp_full() {
    vsum_3_V_0_state_cmp_full =  (sc_logic) ((!vsum_3_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vsum_3_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vsum_3_V_0_vld_in() {
    vsum_3_V_0_vld_in = vsum_3_V_TVALID.read();
}

void max_det::thread_vsum_3_V_0_vld_out() {
    vsum_3_V_0_vld_out = vsum_3_V_0_state.read()[0];
}

void max_det::thread_vsum_3_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vsum_3_V_TDATA_blk_n = vsum_3_V_0_state.read()[0];
    } else {
        vsum_3_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vsum_3_V_TREADY() {
    vsum_3_V_TREADY = vsum_3_V_0_state.read()[1];
}

void max_det::thread_vsum_4_V_0_ack_in() {
    vsum_4_V_0_ack_in = vsum_4_V_0_state.read()[1];
}

void max_det::thread_vsum_4_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())))) {
        vsum_4_V_0_ack_out = ap_const_logic_1;
    } else {
        vsum_4_V_0_ack_out = ap_const_logic_0;
    }
}

void max_det::thread_vsum_4_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, vsum_4_V_0_sel.read())) {
        vsum_4_V_0_data_out = vsum_4_V_0_payload_B.read();
    } else {
        vsum_4_V_0_data_out = vsum_4_V_0_payload_A.read();
    }
}

void max_det::thread_vsum_4_V_0_load_A() {
    vsum_4_V_0_load_A = (vsum_4_V_0_state_cmp_full.read() & ~vsum_4_V_0_sel_wr.read());
}

void max_det::thread_vsum_4_V_0_load_B() {
    vsum_4_V_0_load_B = (vsum_4_V_0_sel_wr.read() & vsum_4_V_0_state_cmp_full.read());
}

void max_det::thread_vsum_4_V_0_sel() {
    vsum_4_V_0_sel = vsum_4_V_0_sel_rd.read();
}

void max_det::thread_vsum_4_V_0_state_cmp_full() {
    vsum_4_V_0_state_cmp_full =  (sc_logic) ((!vsum_4_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(vsum_4_V_0_state.read() != ap_const_lv2_1))[0];
}

void max_det::thread_vsum_4_V_0_vld_in() {
    vsum_4_V_0_vld_in = vsum_4_V_TVALID.read();
}

void max_det::thread_vsum_4_V_0_vld_out() {
    vsum_4_V_0_vld_out = vsum_4_V_0_state.read()[0];
}

void max_det::thread_vsum_4_V_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        vsum_4_V_TDATA_blk_n = vsum_4_V_0_state.read()[0];
    } else {
        vsum_4_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void max_det::thread_vsum_4_V_TREADY() {
    vsum_4_V_TREADY = vsum_4_V_0_state.read()[1];
}

void max_det::thread_vsum_i_1_V_1_comp_s_fu_651_p3() {
    vsum_i_1_V_1_comp_s_fu_651_p3 = (!tmp_4_fu_633_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_4_fu_633_p2.read()[0].to_bool())? vsum_i_1_V_2_fu_561_p1.read(): comp_11_V.read());
}

void max_det::thread_vsum_i_1_V_2_fu_561_p1() {
    vsum_i_1_V_2_fu_561_p1 = vsum_1_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vsum_i_1_V_fu_615_p2() {
    vsum_i_1_V_fu_615_p2 = (!ap_const_lv26_0.is_01() || !vsum_i_1_V_2_fu_561_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(ap_const_lv26_0) - sc_biguint<26>(vsum_i_1_V_2_fu_561_p1.read()));
}

void max_det::thread_vsum_i_2_V_1_comp_s_fu_719_p3() {
    vsum_i_2_V_1_comp_s_fu_719_p3 = (!tmp_9_fu_701_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_9_fu_701_p2.read()[0].to_bool())? vsum_i_2_V_2_fu_573_p1.read(): comp_12_V.read());
}

void max_det::thread_vsum_i_2_V_2_Val2_s_fu_689_p3() {
    vsum_i_2_V_2_Val2_s_fu_689_p3 = (!tmp_5_fu_677_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_5_fu_677_p2.read()[0].to_bool())? vsum_i_2_V_2_fu_573_p1.read(): vsum_i_2_V_fu_683_p2.read());
}

void max_det::thread_vsum_i_2_V_2_fu_573_p1() {
    vsum_i_2_V_2_fu_573_p1 = vsum_2_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vsum_i_2_V_fu_683_p2() {
    vsum_i_2_V_fu_683_p2 = (!ap_const_lv26_0.is_01() || !vsum_i_2_V_2_fu_573_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(ap_const_lv26_0) - sc_biguint<26>(vsum_i_2_V_2_fu_573_p1.read()));
}

void max_det::thread_vsum_i_3_V_1_comp_s_fu_785_p3() {
    vsum_i_3_V_1_comp_s_fu_785_p3 = (!tmp_1_fu_767_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_1_fu_767_p2.read()[0].to_bool())? vsum_i_3_V_2_fu_585_p1.read(): comp_13_V.read());
}

void max_det::thread_vsum_i_3_V_2_Val2_s_fu_755_p3() {
    vsum_i_3_V_2_Val2_s_fu_755_p3 = (!tmp_s_fu_743_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_s_fu_743_p2.read()[0].to_bool())? vsum_i_3_V_2_fu_585_p1.read(): vsum_i_3_V_fu_749_p2.read());
}

void max_det::thread_vsum_i_3_V_2_fu_585_p1() {
    vsum_i_3_V_2_fu_585_p1 = vsum_3_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vsum_i_3_V_fu_749_p2() {
    vsum_i_3_V_fu_749_p2 = (!ap_const_lv26_0.is_01() || !vsum_i_3_V_2_fu_585_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(ap_const_lv26_0) - sc_biguint<26>(vsum_i_3_V_2_fu_585_p1.read()));
}

void max_det::thread_vsum_i_4_V_1_comp_s_fu_851_p3() {
    vsum_i_4_V_1_comp_s_fu_851_p3 = (!tmp_3_fu_833_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_3_fu_833_p2.read()[0].to_bool())? vsum_i_4_V_2_fu_597_p1.read(): comp_14_V.read());
}

void max_det::thread_vsum_i_4_V_2_Val2_s_fu_821_p3() {
    vsum_i_4_V_2_Val2_s_fu_821_p3 = (!tmp_2_fu_809_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_2_fu_809_p2.read()[0].to_bool())? vsum_i_4_V_2_fu_597_p1.read(): vsum_i_4_V_fu_815_p2.read());
}

void max_det::thread_vsum_i_4_V_2_fu_597_p1() {
    vsum_i_4_V_2_fu_597_p1 = vsum_4_V_0_data_out.read().range(26-1, 0);
}

void max_det::thread_vsum_i_4_V_fu_815_p2() {
    vsum_i_4_V_fu_815_p2 = (!ap_const_lv26_0.is_01() || !vsum_i_4_V_2_fu_597_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(ap_const_lv26_0) - sc_biguint<26>(vsum_i_4_V_2_fu_597_p1.read()));
}

void max_det::thread_vsum_test_1_V_1_fu_621_p3() {
    vsum_test_1_V_1_fu_621_p3 = (!tmp_fu_609_p2.read()[0].is_01())? sc_lv<26>(): ((tmp_fu_609_p2.read()[0].to_bool())? vsum_i_1_V_2_fu_561_p1.read(): vsum_i_1_V_fu_615_p2.read());
}

void max_det::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_885_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, vsum_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_1_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_2_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_3_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vsum_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vlr_4_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vbt_4_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_885_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_891_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(out_peaks_V_1_ack_in.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void max_det::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_1_V_TDATA\" :  \"" << vsum_1_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_1_V_TVALID\" :  \"" << vsum_1_V_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"vsum_1_V_TREADY\" :  \"" << vsum_1_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_1_V_TDATA\" :  \"" << vlr_1_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_1_V_TVALID\" :  \"" << vlr_1_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vlr_1_V_TREADY\" :  \"" << vlr_1_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_1_V_TDATA\" :  \"" << vbt_1_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_1_V_TVALID\" :  \"" << vbt_1_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vbt_1_V_TREADY\" :  \"" << vbt_1_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_peaks_V_TDATA\" :  \"" << out_peaks_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_peaks_V_TVALID\" :  \"" << out_peaks_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_peaks_V_TREADY\" :  \"" << out_peaks_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_2_V_TDATA\" :  \"" << vsum_2_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_2_V_TVALID\" :  \"" << vsum_2_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vsum_2_V_TREADY\" :  \"" << vsum_2_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_2_V_TDATA\" :  \"" << vlr_2_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_2_V_TVALID\" :  \"" << vlr_2_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vlr_2_V_TREADY\" :  \"" << vlr_2_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_2_V_TDATA\" :  \"" << vbt_2_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_2_V_TVALID\" :  \"" << vbt_2_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vbt_2_V_TREADY\" :  \"" << vbt_2_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_3_V_TDATA\" :  \"" << vsum_3_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_3_V_TVALID\" :  \"" << vsum_3_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vsum_3_V_TREADY\" :  \"" << vsum_3_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_3_V_TDATA\" :  \"" << vlr_3_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_3_V_TVALID\" :  \"" << vlr_3_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vlr_3_V_TREADY\" :  \"" << vlr_3_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_3_V_TDATA\" :  \"" << vbt_3_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_3_V_TVALID\" :  \"" << vbt_3_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vbt_3_V_TREADY\" :  \"" << vbt_3_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_4_V_TDATA\" :  \"" << vsum_4_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsum_4_V_TVALID\" :  \"" << vsum_4_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vsum_4_V_TREADY\" :  \"" << vsum_4_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_4_V_TDATA\" :  \"" << vlr_4_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vlr_4_V_TVALID\" :  \"" << vlr_4_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vlr_4_V_TREADY\" :  \"" << vlr_4_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_4_V_TDATA\" :  \"" << vbt_4_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vbt_4_V_TVALID\" :  \"" << vbt_4_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"vbt_4_V_TREADY\" :  \"" << vbt_4_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

